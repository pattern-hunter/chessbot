{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "hawk-control-plane",
                "uid": "daa1fe83-cd75-4474-a87a-58a95143b3d9",
                "resourceVersion": "2096477",
                "creationTimestamp": "2024-12-21T05:13:26Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "hawk-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/hawk/hawk-control-plane"
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "32846608Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8127836Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "32846608Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8127836Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-22T17:53:11Z",
                        "lastTransitionTime": "2024-12-21T05:13:25Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-22T17:53:11Z",
                        "lastTransitionTime": "2024-12-21T05:13:25Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-05-22T17:53:11Z",
                        "lastTransitionTime": "2024-12-21T05:13:25Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2025-05-22T17:53:11Z",
                        "lastTransitionTime": "2025-02-01T22:46:30Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "hawk-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "4a418250d7864df09c6b717f3f691be7",
                    "systemUUID": "4a418250d7864df09c6b717f3f691be7",
                    "bootID": "1c71ed93-618e-4401-8b6c-0e4b4d8fbacb",
                    "kernelVersion": "6.10.14-linuxkit",
                    "osImage": "Debian GNU/Linux 12 (bookworm)",
                    "containerRuntimeVersion": "containerd://1.7.24",
                    "kubeletVersion": "v1.32.0",
                    "kubeProxyVersion": "v1.32.0",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-visualization-server@sha256:771cfc11e0e0910aa2221dc878ae34fc78fdaee39a41edb26881ddd9c13f8b1b",
                            "ghcr.io/kubeflow/kfp-visualization-server:2.5.0"
                        ],
                        "sizeBytes": 1603903285
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-metadata-writer@sha256:6b312e5a8434f05bb20f0d381a2b11dd3aeeb1382b7f56c61ce0cf30692d6000",
                            "ghcr.io/kubeflow/kfp-metadata-writer:2.5.0"
                        ],
                        "sizeBytes": 418813644
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-cache-deployer@sha256:f7ef6908d3571406fd14667730682ae34c4127b09e8c202f9bed05ededca6654",
                            "ghcr.io/kubeflow/kfp-cache-deployer:2.5.0"
                        ],
                        "sizeBytes": 397595823
                    },
                    {
                        "names": [
                            "docker.io/library/python@sha256:eedf63967cdb57d8214db38ce21f105003ed4e4d0358f02bedc057341bcf92a0",
                            "docker.io/library/python:3.7"
                        ],
                        "sizeBytes": 363137489
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-frontend@sha256:29f7b0d63c568a6a5a44ea9ccd9dccbcefd31dd95ab333cd6db57c43f8149555",
                            "ghcr.io/kubeflow/kfp-frontend:2.5.0"
                        ],
                        "sizeBytes": 173647642
                    },
                    {
                        "names": [
                            "gcr.io/ml-pipeline/minio@sha256:587abc14be9bbeed794473cf7290c40e377062f2f77f5e4e27742a77680f08e0",
                            "gcr.io/ml-pipeline/minio:RELEASE.2019-08-14T20-37-41Z-license-compliance"
                        ],
                        "sizeBytes": 160813161
                    },
                    {
                        "names": [
                            "gcr.io/ml-pipeline/mysql@sha256:882e55f40d61034a2bb8a1abab1353571ad2a33866f382350788eb34740528b5",
                            "gcr.io/ml-pipeline/mysql:8.0.26"
                        ],
                        "sizeBytes": 150597450
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-api-server@sha256:c98fb6d1e161158234551ee5e1041f1a2c1409b5580e1459262dd60417aa09bd",
                            "ghcr.io/kubeflow/kfp-api-server:2.5.0"
                        ],
                        "sizeBytes": 119099799
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-metadata-envoy@sha256:bf1892c62f23ae5948c4bd72e49bfb21e5649da0a566fea6011ae3ff728418cc",
                            "ghcr.io/kubeflow/kfp-metadata-envoy:2.5.0"
                        ],
                        "sizeBytes": 114247358
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-12-13@sha256:47481b67696a649ac7ca0806ef8aa8cbd3ca60bc4c42ffe8c2d2658d0418925c",
                            "registry.k8s.io/kube-proxy-arm64:v1.32.0",
                            "registry.k8s.io/kube-proxy:v1.32.0"
                        ],
                        "sizeBytes": 98310328
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-12-13@sha256:6aefddb645ee6963afd681b1845c661d0ea4c3b20ab9db86d9e753b203d385f2",
                            "registry.k8s.io/kube-apiserver-arm64:v1.32.0",
                            "registry.k8s.io/kube-apiserver:v1.32.0"
                        ],
                        "sizeBytes": 94986225
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-12-13@sha256:0bab014aef79a63f812367ca3f2dab1fadc19464135557b1e7ed68ff9aa4791b",
                            "registry.k8s.io/kube-controller-manager-arm64:v1.32.0",
                            "registry.k8s.io/kube-controller-manager:v1.32.0"
                        ],
                        "sizeBytes": 88236360
                    },
                    {
                        "names": [
                            "gcr.io/tfx-oss-public/ml_metadata_store_server@sha256:51404ef4419c1426da80f3e14a83dcb55f65bb5a971371d36d14cec1e50af830",
                            "gcr.io/tfx-oss-public/ml_metadata_store_server:1.14.0"
                        ],
                        "sizeBytes": 70679133
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-12-13@sha256:966460238efe4c053130f446948824c6a3848c8299e950407fa88988ec76881c",
                            "registry.k8s.io/kube-scheduler-arm64:v1.32.0",
                            "registry.k8s.io/kube-scheduler:v1.32.0"
                        ],
                        "sizeBytes": 68968774
                    },
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.16-0"
                        ],
                        "sizeBytes": 67941650
                    },
                    {
                        "names": [
                            "quay.io/argoproj/argoexec@sha256:ddde5180538efcec0353b9ede8f1b140f24705cad2e1b90ee2ddbbeecee4a620",
                            "quay.io/argoproj/argoexec:v3.5.14"
                        ],
                        "sizeBytes": 49377040
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-driver@sha256:2b685164a87618cd96d293cf333a7db2bd0f7de177d94b95b04202a979398e54",
                            "ghcr.io/kubeflow/kfp-driver:2.5.0"
                        ],
                        "sizeBytes": 44107079
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-launcher@sha256:556528521d83ad58f612201ae71ccbe421595964434ddb4f97b6103f578dd28c",
                            "ghcr.io/kubeflow/kfp-launcher:2.5.0"
                        ],
                        "sizeBytes": 41639291
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20241212-9f82dd49"
                        ],
                        "sizeBytes": 35679862
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-scheduled-workflow-controller@sha256:afdff25541e51a9c775c82ea40cb782376c79ee2b711445a0677ecdd2bd83339",
                            "ghcr.io/kubeflow/kfp-scheduled-workflow-controller:2.5.0"
                        ],
                        "sizeBytes": 35343391
                    },
                    {
                        "names": [
                            "quay.io/argoproj/workflow-controller@sha256:73ecdc3eb57d70419212e7c88096de07c3b8521cd6af2e063c75054c9439bdee",
                            "quay.io/argoproj/workflow-controller:v3.5.14"
                        ],
                        "sizeBytes": 35266451
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-cache-server@sha256:1a390c17eb9537f70ec1a60378464d48ba437736bd70af1aad13f9434a6d92aa",
                            "ghcr.io/kubeflow/kfp-cache-server:2.5.0"
                        ],
                        "sizeBytes": 33418865
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-persistence-agent@sha256:f45d41df090f4cd7cf9eec03164a8b468994f62dfe4431490248812401e4a273",
                            "ghcr.io/kubeflow/kfp-persistence-agent:2.5.0"
                        ],
                        "sizeBytes": 32097834
                    },
                    {
                        "names": [
                            "ghcr.io/kubeflow/kfp-viewer-crd-controller@sha256:b7196eacf61de08667d37a90dc39ebee152e593b8028657802140cf3bbb53d28",
                            "ghcr.io/kubeflow/kfp-viewer-crd-controller:2.5.0"
                        ],
                        "sizeBytes": 28281847
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20241212-8ac705d0"
                        ],
                        "sizeBytes": 20225057
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.11.3"
                        ],
                        "sizeBytes": 16948420
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20241212-8ac705d0"
                        ],
                        "sizeBytes": 2954522
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.10"
                        ],
                        "sizeBytes": 267933
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "26f0b8ca-05f6-47b7-88b1-70b7c885b346",
                "resourceVersion": "234",
                "creationTimestamp": "2024-12-21T05:13:28Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "7983af7a-429a-426a-b2e2-514f84f38b26",
                "resourceVersion": "381",
                "generation": 1,
                "creationTimestamp": "2024-12-21T05:13:29Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20241212-9f82dd49",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "hawk-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "0cd7efa6-05e9-41a8-a6c0-f263ae0eca6f",
                "resourceVersion": "377",
                "generation": 1,
                "creationTimestamp": "2024-12-21T05:13:28Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.32.0",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "d597ccc4-1822-4c73-bba6-7fe5fd30e03b",
                "resourceVersion": "2087894",
                "generation": 1,
                "creationTimestamp": "2024-12-21T05:13:28Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-12-21T05:13:47Z",
                        "lastTransitionTime": "2024-12-21T05:13:34Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-668d6bf9bc\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-05-22T15:30:06Z",
                        "lastTransitionTime": "2025-05-22T15:30:06Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-668d6bf9bc",
                "namespace": "kube-system",
                "uid": "590fed76-9bb9-4bb0-9f4f-f767121fbf89",
                "resourceVersion": "2087893",
                "generation": 1,
                "creationTimestamp": "2024-12-21T05:13:34Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "668d6bf9bc"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "d597ccc4-1822-4c73-bba6-7fe5fd30e03b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "668d6bf9bc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "668d6bf9bc"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-bbpzr",
                "generateName": "coredns-668d6bf9bc-",
                "namespace": "kube-system",
                "uid": "c75ca06f-491d-4b13-bac8-de6ccf9c6290",
                "resourceVersion": "2087890",
                "creationTimestamp": "2024-12-21T05:13:34Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "668d6bf9bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-668d6bf9bc",
                        "uid": "590fed76-9bb9-4bb0-9f4f-f767121fbf89",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-7cnl9",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-7cnl9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "hawk-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:34Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:30:12Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:30:12Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:46Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "10.244.0.10",
                "podIPs": [
                    {
                        "ip": "10.244.0.10"
                    }
                ],
                "startTime": "2024-12-21T05:13:46Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:34Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:15Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://d15fc5e6f510a941152932301e046521edf68ede8216a5095fcea5215148871a"
                            }
                        },
                        "ready": true,
                        "restartCount": 9,
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "imageID": "sha256:2f6c962e7b8311337352d9fdea917da2184d9919f4da7695bc2a6517cf392fe4",
                        "containerID": "containerd://85276f77f46670816edbe9bb03eb42ef96be0e0924ada6ef80afe21b54f19abb",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/coredns",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-7cnl9",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-668d6bf9bc-t5ln7",
                "generateName": "coredns-668d6bf9bc-",
                "namespace": "kube-system",
                "uid": "2181b99d-d7d5-4396-b1ba-e7b5590e545f",
                "resourceVersion": "2087869",
                "creationTimestamp": "2024-12-21T05:13:34Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "668d6bf9bc"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-668d6bf9bc",
                        "uid": "590fed76-9bb9-4bb0-9f4f-f767121fbf89",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-462wc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-462wc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "hawk-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:34Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:46Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:30:06Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:30:06Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:46Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "10.244.0.8",
                "podIPs": [
                    {
                        "ip": "10.244.0.8"
                    }
                ],
                "startTime": "2024-12-21T05:13:46Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:34Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:15Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://32cca173ddcbad5b4b917ef2bd2d49ea96f177187478f1909ead2030cc2aa53b"
                            }
                        },
                        "ready": true,
                        "restartCount": 9,
                        "image": "registry.k8s.io/coredns/coredns:v1.11.3",
                        "imageID": "sha256:2f6c962e7b8311337352d9fdea917da2184d9919f4da7695bc2a6517cf392fe4",
                        "containerID": "containerd://bda1fa7034b0498220ae1d28a780b49d00e2958fadc8625e9b2337ad7c43ce14",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/coredns",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-462wc",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-hawk-control-plane",
                "namespace": "kube-system",
                "uid": "f088d39b-56a2-4fc9-93f2-402f8f7e81eb",
                "resourceVersion": "2087797",
                "creationTimestamp": "2024-12-21T05:13:27Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.2:2379",
                    "kubernetes.io/config.hash": "89d8322ce9b32548322d691c89ff4880",
                    "kubernetes.io/config.mirror": "89d8322ce9b32548322d691c89ff4880",
                    "kubernetes.io/config.seen": "2024-12-21T05:13:23.560236714Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "hawk-control-plane",
                        "uid": "daa1fe83-cd75-4474-a87a-58a95143b3d9",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.16-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.2:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.18.0.2:2380",
                            "--initial-cluster=hawk-control-plane=https://172.18.0.2:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.2:2380",
                            "--name=hawk-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:29Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:48Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:48Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2025-05-22T15:29:28Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:12Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://5878366d22873f396c04fe603f3975c58114c8ccf876eb85747ebac4230dc289"
                            }
                        },
                        "ready": true,
                        "restartCount": 11,
                        "image": "registry.k8s.io/etcd:3.5.16-0",
                        "imageID": "sha256:7fc9d4aa817aa6a3e549f3cd49d1f7b496407be979fc36dd5f356d59ce8c3a82",
                        "containerID": "containerd://d1db5302c775ef305a123f33d46715663cb1f2b31d31ad9d0d6f8daf2fa9589f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-vrhgz",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "368309d5-9760-4480-9e28-8685188f6b86",
                "resourceVersion": "2087762",
                "creationTimestamp": "2024-12-21T05:13:34Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "567bd7695",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "7983af7a-429a-426a-b2e2-514f84f38b26",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-2mg85",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20241212-9f82dd49",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "hawk-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-2mg85",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "hawk-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:35Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:35Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:35Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:34Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2024-12-21T05:13:34Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:34Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:15Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://fd749746494d99535a6ef0e8326aca1eb9685b4be5c3fc9aa8f27c2f60d12465"
                            }
                        },
                        "ready": true,
                        "restartCount": 9,
                        "image": "docker.io/kindest/kindnetd:v20241212-9f82dd49",
                        "imageID": "sha256:e1181ee320546c66f17956a302db1b7899d88a593f116726718851133de588b6",
                        "containerID": "containerd://db79532fb91a80431686394f526513572f25a5fe84b4e101c402bb919bedcc91",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "mountPath": "/lib/modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-2mg85",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-hawk-control-plane",
                "namespace": "kube-system",
                "uid": "16132788-26fb-4aa3-be3a-78b7cd7e7984",
                "resourceVersion": "2087785",
                "creationTimestamp": "2024-12-21T05:13:27Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.2:6443",
                    "kubernetes.io/config.hash": "a7105f1ad98ba1ed27e609f38aef9792",
                    "kubernetes.io/config.mirror": "a7105f1ad98ba1ed27e609f38aef9792",
                    "kubernetes.io/config.seen": "2024-12-21T05:13:23.560238089Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "hawk-control-plane",
                        "uid": "daa1fe83-cd75-4474-a87a-58a95143b3d9",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.32.0",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:29Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:42Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:42Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2025-05-22T15:29:28Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:12Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://687bf2ff6f4686b183af4a0d185dbb98373c9c6313366184ebc2bf10fa49a0e2"
                            }
                        },
                        "ready": true,
                        "restartCount": 11,
                        "image": "registry.k8s.io/kube-apiserver-arm64:v1.32.0",
                        "imageID": "docker.io/library/import-2024-12-13@sha256:6aefddb645ee6963afd681b1845c661d0ea4c3b20ab9db86d9e753b203d385f2",
                        "containerID": "containerd://c310959e469e79098b7d499ea0db42deab30a2ac702695da86da0100e26b23b7",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-hawk-control-plane",
                "namespace": "kube-system",
                "uid": "79e6eabd-b086-4c3b-a844-b7050c4a6716",
                "resourceVersion": "2087786",
                "creationTimestamp": "2024-12-21T05:13:28Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "937e06e6e17bf59a85a4bf7e0f9e77c5",
                    "kubernetes.io/config.mirror": "937e06e6e17bf59a85a4bf7e0f9e77c5",
                    "kubernetes.io/config.seen": "2024-12-21T05:13:28.248241341Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "hawk-control-plane",
                        "uid": "daa1fe83-cd75-4474-a87a-58a95143b3d9",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.32.0",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=hawk",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:29Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:43Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:43Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2025-05-22T15:29:28Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:12Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://fbc7215cf250dea55c4b1bc29aeecc02ba014298e916538eb0b77c1125a48c3b"
                            }
                        },
                        "ready": true,
                        "restartCount": 18,
                        "image": "registry.k8s.io/kube-controller-manager-arm64:v1.32.0",
                        "imageID": "docker.io/library/import-2024-12-13@sha256:0bab014aef79a63f812367ca3f2dab1fadc19464135557b1e7ed68ff9aa4791b",
                        "containerID": "containerd://825d2c2c3bec15e7f593c391c34351d024ff2c84befca4ae202e22698bb3d098",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-xxjt7",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "ca2c66a3-73ca-4cf9-8c95-6d17399ebae3",
                "resourceVersion": "2087740",
                "creationTimestamp": "2024-12-21T05:13:34Z",
                "labels": {
                    "controller-revision-hash": "64b9dbc74b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "0cd7efa6-05e9-41a8-a6c0-f263ae0eca6f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-r5rbw",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.32.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-r5rbw",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "hawk-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:34Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-12-21T05:13:34Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2024-12-21T05:13:34Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:34Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:15Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://bc7cc8909c33859624e966af2771cd8e7953c67dfce2a5fada83a0d3ce304863"
                            }
                        },
                        "ready": true,
                        "restartCount": 9,
                        "image": "registry.k8s.io/kube-proxy-arm64:v1.32.0",
                        "imageID": "docker.io/library/import-2024-12-13@sha256:47481b67696a649ac7ca0806ef8aa8cbd3ca60bc4c42ffe8c2d2658d0418925c",
                        "containerID": "containerd://7641bc1bf352ffed7cb08ce33c039beb2c37d8698ab733c7becf90509615c2c9",
                        "started": true,
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "mountPath": "/lib/modules",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            },
                            {
                                "name": "kube-api-access-r5rbw",
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "readOnly": true,
                                "recursiveReadOnly": "Disabled"
                            }
                        ]
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-hawk-control-plane",
                "namespace": "kube-system",
                "uid": "4d5153e0-c73e-4fec-a67b-5016bfc57c0d",
                "resourceVersion": "2087795",
                "creationTimestamp": "2024-12-21T05:13:28Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "9148c1c26c260466943ddfcbd91a67ff",
                    "kubernetes.io/config.mirror": "9148c1c26c260466943ddfcbd91a67ff",
                    "kubernetes.io/config.seen": "2024-12-21T05:13:28.248242300Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "hawk-control-plane",
                        "uid": "daa1fe83-cd75-4474-a87a-58a95143b3d9",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.32.0",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "hawk-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:29Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:48Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:48Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-05-22T15:29:28Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "hostIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2025-05-22T15:29:28Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2025-05-22T15:29:29Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2025-05-18T17:21:12Z",
                                "finishedAt": "2025-05-22T15:29:27Z",
                                "containerID": "containerd://0e6a5a39c8706b5a42dd66e29eaf0ef3a52ddb4178ef900590b4820904f08070"
                            }
                        },
                        "ready": true,
                        "restartCount": 18,
                        "image": "registry.k8s.io/kube-scheduler-arm64:v1.32.0",
                        "imageID": "docker.io/library/import-2024-12-13@sha256:966460238efe4c053130f446948824c6a3848c8299e950407fa88988ec76881c",
                        "containerID": "containerd://b7b378e7241a54e88006c12e9b455dadf4c366fba21df0a5a53f857fbed12821",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-668d6bf9bc-bbpzr ====
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 1b226df79860026c6a52e67daa10d7f0d57ec5b023288ec00c5e05f93523c894564e15b91770d3a07ae1cfbe861d15b37d4a0027e69c546ab112970993a3b03b
CoreDNS-1.11.3
linux/arm64, go1.21.11, a6338e9
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1359330211]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.792) (total time: 30016ms):
Trace[1359330211]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30016ms (15:30:04.807)
Trace[1359330211]: [30.016857264s] [30.016857264s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[990128388]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.792) (total time: 30017ms):
Trace[990128388]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30016ms (15:30:04.807)
Trace[990128388]: [30.017300514s] [30.017300514s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1358144300]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.792) (total time: 30017ms):
Trace[1358144300]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30016ms (15:30:04.807)
Trace[1358144300]: [30.017270264s] [30.017270264s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
==== END logs for container coredns of pod kube-system/coredns-668d6bf9bc-bbpzr ====
==== START logs for container coredns of pod kube-system/coredns-668d6bf9bc-t5ln7 ====
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 1b226df79860026c6a52e67daa10d7f0d57ec5b023288ec00c5e05f93523c894564e15b91770d3a07ae1cfbe861d15b37d4a0027e69c546ab112970993a3b03b
CoreDNS-1.11.3
linux/arm64, go1.21.11, a6338e9
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1439196472]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.797) (total time: 30011ms):
Trace[1439196472]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30011ms (15:30:04.807)
Trace[1439196472]: [30.011905597s] [30.011905597s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[32845856]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.796) (total time: 30012ms):
Trace[32845856]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30012ms (15:30:04.808)
Trace[32845856]: [30.012712389s] [30.012712389s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[580704062]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (22-May-2025 15:29:34.796) (total time: 30012ms):
Trace[580704062]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30012ms (15:30:04.808)
Trace[580704062]: [30.012891889s] [30.012891889s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
==== END logs for container coredns of pod kube-system/coredns-668d6bf9bc-t5ln7 ====
==== START logs for container etcd of pod kube-system/etcd-hawk-control-plane ====
{"level":"warn","ts":"2025-05-22T15:29:29.230707Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-05-22T15:29:29.231319Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.2:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.18.0.2:2380","--initial-cluster=hawk-control-plane=https://172.18.0.2:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.2:2380","--name=hawk-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2025-05-22T15:29:29.231708Z","caller":"etcdmain/etcd.go:116","msg":"server has been already initialized","data-dir":"/var/lib/etcd","dir-type":"member"}
{"level":"warn","ts":"2025-05-22T15:29:29.231723Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-05-22T15:29:29.231728Z","caller":"embed/etcd.go:128","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2025-05-22T15:29:29.231748Z","caller":"embed/etcd.go:497","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-05-22T15:29:29.237075Z","caller":"embed/etcd.go:136","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"]}
{"level":"info","ts":"2025-05-22T15:29:29.238442Z","caller":"embed/etcd.go:311","msg":"starting an etcd server","etcd-version":"3.5.16","git-sha":"f20bbadd4","go-version":"go1.22.7","go-os":"linux","go-arch":"arm64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":true,"name":"hawk-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"","initial-cluster-state":"new","initial-cluster-token":"","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-05-22T15:29:29.271231Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"31.365084ms"}
{"level":"info","ts":"2025-05-22T15:29:30.284336Z","caller":"etcdserver/server.go:511","msg":"recovered v2 store from snapshot","snapshot-index":2400247,"snapshot-size":"11 kB"}
{"level":"info","ts":"2025-05-22T15:29:30.284752Z","caller":"etcdserver/server.go:524","msg":"recovered v3 backend from snapshot","backend-size-bytes":5820416,"backend-size":"5.8 MB","backend-size-in-use-bytes":1871872,"backend-size-in-use":"1.9 MB"}
{"level":"info","ts":"2025-05-22T15:29:30.326435Z","caller":"etcdserver/raft.go:540","msg":"restarting local member","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","commit-index":2404997}
{"level":"info","ts":"2025-05-22T15:29:30.326925Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=(1033796535975940116)"}
{"level":"info","ts":"2025-05-22T15:29:30.327235Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became follower at term 12"}
{"level":"info","ts":"2025-05-22T15:29:30.327246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft e58c878e0e01014 [peers: [e58c878e0e01014], term: 12, commit: 2404997, applied: 2400247, lastindex: 2404997, lastterm: 12]"}
{"level":"info","ts":"2025-05-22T15:29:30.327303Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-05-22T15:29:30.327553Z","caller":"membership/cluster.go:278","msg":"recovered/added member from store","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","recovered-remote-peer-id":"e58c878e0e01014","recovered-remote-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2025-05-22T15:29:30.327561Z","caller":"membership/cluster.go:287","msg":"set cluster version from store","cluster-version":"3.5"}
{"level":"warn","ts":"2025-05-22T15:29:30.328191Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-05-22T15:29:30.328585Z","caller":"mvcc/kvstore.go:346","msg":"restored last compact revision","meta-bucket-name":"meta","meta-bucket-name-key":"finishedCompactRev","restored-compact-revision":2087107}
{"level":"info","ts":"2025-05-22T15:29:30.331316Z","caller":"mvcc/kvstore.go:423","msg":"kvstore restored","current-rev":2087585}
{"level":"info","ts":"2025-05-22T15:29:30.331813Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-05-22T15:29:30.332520Z","caller":"etcdserver/corrupt.go:96","msg":"starting initial corruption check","local-member-id":"e58c878e0e01014","timeout":"7s"}
{"level":"info","ts":"2025-05-22T15:29:30.332765Z","caller":"etcdserver/corrupt.go:177","msg":"initial corruption checking passed; no corruption","local-member-id":"e58c878e0e01014"}
{"level":"info","ts":"2025-05-22T15:29:30.332781Z","caller":"etcdserver/server.go:864","msg":"starting etcd server","local-member-id":"e58c878e0e01014","local-server-version":"3.5.16","cluster-id":"c74448475845f0fb","cluster-version":"3.5"}
{"level":"info","ts":"2025-05-22T15:29:30.332890Z","caller":"etcdserver/server.go:757","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"e58c878e0e01014","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-05-22T15:29:30.333275Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-22T15:29:30.333364Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-22T15:29:30.333436Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-22T15:29:30.333439Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-05-22T15:29:30.333914Z","caller":"embed/etcd.go:729","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-05-22T15:29:30.334052Z","caller":"embed/etcd.go:280","msg":"now serving peer/client/metrics","local-member-id":"e58c878e0e01014","initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-05-22T15:29:30.334074Z","caller":"embed/etcd.go:871","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-05-22T15:29:30.335042Z","caller":"embed/etcd.go:600","msg":"serving peer traffic","address":"172.18.0.2:2380"}
{"level":"info","ts":"2025-05-22T15:29:30.335056Z","caller":"embed/etcd.go:572","msg":"cmux::serve","address":"172.18.0.2:2380"}
{"level":"info","ts":"2025-05-22T15:29:30.830245Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 is starting a new election at term 12"}
{"level":"info","ts":"2025-05-22T15:29:30.830295Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became pre-candidate at term 12"}
{"level":"info","ts":"2025-05-22T15:29:30.830457Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgPreVoteResp from e58c878e0e01014 at term 12"}
{"level":"info","ts":"2025-05-22T15:29:30.830472Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became candidate at term 13"}
{"level":"info","ts":"2025-05-22T15:29:30.830483Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgVoteResp from e58c878e0e01014 at term 13"}
{"level":"info","ts":"2025-05-22T15:29:30.830494Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became leader at term 13"}
{"level":"info","ts":"2025-05-22T15:29:30.830506Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: e58c878e0e01014 elected leader e58c878e0e01014 at term 13"}
{"level":"info","ts":"2025-05-22T15:29:30.831538Z","caller":"etcdserver/server.go:2140","msg":"published local member to cluster through raft","local-member-id":"e58c878e0e01014","local-member-attributes":"{Name:hawk-control-plane ClientURLs:[https://172.18.0.2:2379]}","request-path":"/0/members/e58c878e0e01014/attributes","cluster-id":"c74448475845f0fb","publish-timeout":"7s"}
{"level":"info","ts":"2025-05-22T15:29:30.831736Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-05-22T15:29:30.832118Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-05-22T15:29:30.832324Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-05-22T15:29:30.832362Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-05-22T15:29:30.834775Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-22T15:29:30.835050Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-05-22T15:29:30.835290Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-05-22T15:29:30.835536Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"172.18.0.2:2379"}
{"level":"info","ts":"2025-05-22T15:39:30.848840Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2088308}
{"level":"info","ts":"2025-05-22T15:39:30.862577Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2088308,"took":"13.3735ms","hash":375846205,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":3035136,"current-db-size-in-use":"3.0 MB"}
{"level":"info","ts":"2025-05-22T15:39:30.862597Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":375846205,"revision":2088308,"compact-revision":2087107}
{"level":"info","ts":"2025-05-22T15:44:30.850931Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2088788}
{"level":"info","ts":"2025-05-22T15:44:30.863072Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2088788,"took":"11.586542ms","hash":3470157932,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1875968,"current-db-size-in-use":"1.9 MB"}
{"level":"info","ts":"2025-05-22T15:44:30.863113Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":3470157932,"revision":2088788,"compact-revision":2088308}
{"level":"info","ts":"2025-05-22T15:49:30.851951Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2089238}
{"level":"info","ts":"2025-05-22T15:49:30.865727Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2089238,"took":"12.92925ms","hash":179609407,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1835008,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T15:49:30.865792Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":179609407,"revision":2089238,"compact-revision":2088788}
{"level":"info","ts":"2025-05-22T15:54:30.852190Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2089688}
{"level":"info","ts":"2025-05-22T15:54:30.865055Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2089688,"took":"11.86125ms","hash":3139924813,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1806336,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T15:54:30.865130Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":3139924813,"revision":2089688,"compact-revision":2089238}
{"level":"info","ts":"2025-05-22T15:59:30.853114Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2090136}
{"level":"info","ts":"2025-05-22T15:59:30.866436Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2090136,"took":"12.406792ms","hash":907126336,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1794048,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T15:59:30.866483Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":907126336,"revision":2090136,"compact-revision":2089688}
{"level":"info","ts":"2025-05-22T16:04:30.926680Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2090586}
{"level":"info","ts":"2025-05-22T16:04:30.941476Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2090586,"took":"13.732917ms","hash":2442445713,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1822720,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T16:04:30.941581Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":2442445713,"revision":2090586,"compact-revision":2090136}
{"level":"info","ts":"2025-05-22T16:32:15.973730Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2091035}
{"level":"info","ts":"2025-05-22T16:32:15.988962Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2091035,"took":"13.925459ms","hash":2755705211,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1806336,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T16:32:15.989014Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":2755705211,"revision":2091035,"compact-revision":2090586}
{"level":"info","ts":"2025-05-22T16:37:15.997043Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2091482}
{"level":"info","ts":"2025-05-22T16:37:16.008763Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2091482,"took":"11.486791ms","hash":296541908,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1818624,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T16:37:16.008794Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":296541908,"revision":2091482,"compact-revision":2091035}
{"level":"info","ts":"2025-05-22T16:40:15.933145Z","caller":"etcdserver/server.go:1473","msg":"triggering snapshot","local-member-id":"e58c878e0e01014","local-member-applied-index":2410248,"local-member-snapshot-index":2400247,"local-member-snapshot-count":10000}
{"level":"info","ts":"2025-05-22T16:40:15.942363Z","caller":"etcdserver/server.go:2493","msg":"saved snapshot","snapshot-index":2410248}
{"level":"info","ts":"2025-05-22T16:40:15.942703Z","caller":"etcdserver/server.go:2523","msg":"compacted Raft logs","compact-index":2405248}
{"level":"info","ts":"2025-05-22T16:40:46.623761Z","caller":"fileutil/purge.go:96","msg":"purged","path":"/var/lib/etcd/member/snap/000000000000000c-00000000002403b3.snap"}
{"level":"info","ts":"2025-05-22T17:07:34.464569Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2091932}
{"level":"info","ts":"2025-05-22T17:07:34.476909Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2091932,"took":"11.376583ms","hash":3638423205,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":2310144,"current-db-size-in-use":"2.3 MB"}
{"level":"info","ts":"2025-05-22T17:07:34.476969Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":3638423205,"revision":2091932,"compact-revision":2091482}
{"level":"info","ts":"2025-05-22T17:13:04.532197Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2092413}
{"level":"info","ts":"2025-05-22T17:13:04.546213Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2092413,"took":"13.254875ms","hash":1682769998,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1892352,"current-db-size-in-use":"1.9 MB"}
{"level":"info","ts":"2025-05-22T17:13:04.546322Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1682769998,"revision":2092413,"compact-revision":2091932}
{"level":"info","ts":"2025-05-22T17:18:04.539388Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2092864}
{"level":"info","ts":"2025-05-22T17:18:04.552718Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2092864,"took":"12.70475ms","hash":775299885,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1822720,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T17:18:04.552771Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":775299885,"revision":2092864,"compact-revision":2092413}
{"level":"info","ts":"2025-05-22T17:23:04.512451Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2093313}
{"level":"info","ts":"2025-05-22T17:23:04.524874Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2093313,"took":"11.8305ms","hash":1186331984,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1843200,"current-db-size-in-use":"1.8 MB"}
{"level":"info","ts":"2025-05-22T17:23:04.524938Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1186331984,"revision":2093313,"compact-revision":2092864}
{"level":"info","ts":"2025-05-22T17:28:04.517656Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2093768}
{"level":"info","ts":"2025-05-22T17:28:04.531651Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2093768,"took":"13.246458ms","hash":1091887467,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1744896,"current-db-size-in-use":"1.7 MB"}
{"level":"info","ts":"2025-05-22T17:28:04.531691Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1091887467,"revision":2093768,"compact-revision":2093313}
{"level":"info","ts":"2025-05-22T17:33:04.525970Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2094217}
{"level":"info","ts":"2025-05-22T17:33:04.531642Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2094217,"took":"5.066917ms","hash":2774106868,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1974272,"current-db-size-in-use":"2.0 MB"}
{"level":"info","ts":"2025-05-22T17:33:04.531716Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":2774106868,"revision":2094217,"compact-revision":2093768}
{"level":"info","ts":"2025-05-22T17:38:04.459781Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2094668}
{"level":"info","ts":"2025-05-22T17:38:04.463104Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2094668,"took":"2.729917ms","hash":1408716392,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1974272,"current-db-size-in-use":"2.0 MB"}
{"level":"info","ts":"2025-05-22T17:38:04.463152Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1408716392,"revision":2094668,"compact-revision":2094217}
{"level":"info","ts":"2025-05-22T17:43:04.457400Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2095117}
{"level":"info","ts":"2025-05-22T17:43:04.462078Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2095117,"took":"3.999958ms","hash":527957296,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1945600,"current-db-size-in-use":"1.9 MB"}
{"level":"info","ts":"2025-05-22T17:43:04.462136Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":527957296,"revision":2095117,"compact-revision":2094668}
{"level":"info","ts":"2025-05-22T17:44:58.918542Z","caller":"traceutil/trace.go:171","msg":"trace[1763429089] transaction","detail":"{read_only:false; response_revision:2095739; number_of_response:1; }","duration":"118.13775ms","start":"2025-05-22T17:44:58.799814Z","end":"2025-05-22T17:44:58.917952Z","steps":["trace[1763429089] 'process raft request'  (duration: 90.125833ms)","trace[1763429089] 'compare'  (duration: 26.317417ms)"],"step_count":2}
{"level":"info","ts":"2025-05-22T17:48:04.453397Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2095568}
{"level":"info","ts":"2025-05-22T17:48:04.465714Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2095568,"took":"8.473209ms","hash":1328360817,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":1970176,"current-db-size-in-use":"2.0 MB"}
{"level":"info","ts":"2025-05-22T17:48:04.465816Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1328360817,"revision":2095568,"compact-revision":2095117}
{"level":"info","ts":"2025-05-22T17:53:04.451269Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2096015}
{"level":"info","ts":"2025-05-22T17:53:04.455954Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":2096015,"took":"4.250583ms","hash":1563468219,"current-db-size-bytes":5820416,"current-db-size":"5.8 MB","current-db-size-in-use-bytes":2019328,"current-db-size-in-use":"2.0 MB"}
{"level":"info","ts":"2025-05-22T17:53:04.456022Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1563468219,"revision":2096015,"compact-revision":2095568}
==== END logs for container etcd of pod kube-system/etcd-hawk-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-vrhgz ====
I0522 15:29:35.469793       1 main.go:390] probe TCP address hawk-control-plane:6443
I0522 15:29:35.571046       1 main.go:109] connected to apiserver: https://hawk-control-plane:6443
I0522 15:29:35.574594       1 main.go:139] hostIP = 172.18.0.2
podIP = 172.18.0.2
I0522 15:29:35.574918       1 main.go:148] setting mtu 65535 for CNI 
I0522 15:29:35.574926       1 main.go:178] kindnetd IP family: "ipv4"
I0522 15:29:35.574936       1 main.go:182] noMask IPv4 subnets: [10.244.0.0/16]
I0522 15:29:36.230745       1 controller.go:361] Starting controller kube-network-policies
I0522 15:29:36.230773       1 controller.go:365] Waiting for informer caches to sync
I0522 15:29:36.247092       1 shared_informer.go:313] Waiting for caches to sync for kube-network-policies
I0522 15:29:36.649313       1 shared_informer.go:320] Caches are synced for kube-network-policies
I0522 15:29:36.649352       1 metrics.go:61] Registering metrics
I0522 15:29:36.649408       1 controller.go:401] Syncing nftables rules
I0522 15:29:46.230738       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:29:46.230972       1 main.go:301] handling current node
I0522 15:29:56.230452       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:29:56.233002       1 main.go:301] handling current node
I0522 15:30:06.229665       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:06.229784       1 main.go:301] handling current node
I0522 15:30:16.229805       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:16.229949       1 main.go:301] handling current node
I0522 15:30:26.229694       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:26.229998       1 main.go:301] handling current node
I0522 15:30:36.228963       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:36.229054       1 main.go:301] handling current node
I0522 15:30:46.230307       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:46.231174       1 main.go:301] handling current node
I0522 15:30:56.229451       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:30:56.230782       1 main.go:301] handling current node
I0522 15:31:06.228374       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:06.228761       1 main.go:301] handling current node
I0522 15:31:16.229905       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:16.230051       1 main.go:301] handling current node
I0522 15:31:26.227484       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:26.227611       1 main.go:301] handling current node
I0522 15:31:36.228046       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:36.228428       1 main.go:301] handling current node
I0522 15:31:46.227417       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:46.227662       1 main.go:301] handling current node
I0522 15:31:56.228172       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:31:56.228553       1 main.go:301] handling current node
I0522 15:32:06.231552       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:06.232042       1 main.go:301] handling current node
I0522 15:32:16.225954       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:16.226009       1 main.go:301] handling current node
I0522 15:32:26.227230       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:26.227734       1 main.go:301] handling current node
I0522 15:32:36.226394       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:36.226509       1 main.go:301] handling current node
I0522 15:32:46.227424       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:46.227598       1 main.go:301] handling current node
I0522 15:32:56.223381       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:32:56.223500       1 main.go:301] handling current node
I0522 15:33:06.221552       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:06.221709       1 main.go:301] handling current node
I0522 15:33:16.221498       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:16.221705       1 main.go:301] handling current node
I0522 15:33:26.227538       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:26.228269       1 main.go:301] handling current node
I0522 15:33:36.225124       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:36.225304       1 main.go:301] handling current node
I0522 15:33:46.225481       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:46.228898       1 main.go:301] handling current node
I0522 15:33:56.226145       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:33:56.226689       1 main.go:301] handling current node
I0522 15:34:06.224495       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:06.225414       1 main.go:301] handling current node
I0522 15:34:16.222959       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:16.223180       1 main.go:301] handling current node
I0522 15:34:26.222837       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:26.222918       1 main.go:301] handling current node
I0522 15:34:36.239663       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:36.240345       1 main.go:301] handling current node
I0522 15:34:46.224994       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:46.225861       1 main.go:301] handling current node
I0522 15:34:56.224204       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:34:56.225071       1 main.go:301] handling current node
I0522 15:35:06.223361       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:06.223488       1 main.go:301] handling current node
I0522 15:35:16.223714       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:16.224687       1 main.go:301] handling current node
I0522 15:35:26.221158       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:26.221314       1 main.go:301] handling current node
I0522 15:35:36.222246       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:36.222851       1 main.go:301] handling current node
I0522 15:35:46.222030       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:46.223263       1 main.go:301] handling current node
I0522 15:35:56.220705       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:35:56.221491       1 main.go:301] handling current node
I0522 15:36:06.222224       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:06.222632       1 main.go:301] handling current node
I0522 15:36:16.221971       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:16.222271       1 main.go:301] handling current node
I0522 15:36:26.221290       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:26.221767       1 main.go:301] handling current node
I0522 15:36:36.636130       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:36.637194       1 main.go:301] handling current node
I0522 15:36:46.220585       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:46.221171       1 main.go:301] handling current node
I0522 15:36:56.220221       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:36:56.220478       1 main.go:301] handling current node
I0522 15:37:06.219336       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:06.219841       1 main.go:301] handling current node
I0522 15:37:16.220003       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:16.222107       1 main.go:301] handling current node
I0522 15:37:26.220720       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:26.220923       1 main.go:301] handling current node
I0522 15:37:36.218908       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:36.219048       1 main.go:301] handling current node
I0522 15:37:46.219000       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:46.219177       1 main.go:301] handling current node
I0522 15:37:56.218063       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:37:56.218191       1 main.go:301] handling current node
I0522 15:38:06.219265       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:06.219928       1 main.go:301] handling current node
I0522 15:38:16.218359       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:16.218745       1 main.go:301] handling current node
I0522 15:38:26.217570       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:26.217758       1 main.go:301] handling current node
I0522 15:38:36.221266       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:36.221606       1 main.go:301] handling current node
I0522 15:38:46.218015       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:46.218270       1 main.go:301] handling current node
I0522 15:38:56.220572       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:38:56.220634       1 main.go:301] handling current node
I0522 15:39:06.217006       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:06.217186       1 main.go:301] handling current node
I0522 15:39:16.216204       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:16.216418       1 main.go:301] handling current node
I0522 15:39:26.215930       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:26.216266       1 main.go:301] handling current node
I0522 15:39:36.227597       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:36.227711       1 main.go:301] handling current node
I0522 15:39:46.215013       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:46.215192       1 main.go:301] handling current node
I0522 15:39:56.215137       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:39:56.215305       1 main.go:301] handling current node
I0522 15:40:06.214478       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:06.214671       1 main.go:301] handling current node
I0522 15:40:16.215999       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:16.216623       1 main.go:301] handling current node
I0522 15:40:26.214897       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:26.215386       1 main.go:301] handling current node
I0522 15:40:36.214254       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:36.214452       1 main.go:301] handling current node
I0522 15:40:46.215021       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:46.215264       1 main.go:301] handling current node
I0522 15:40:56.213570       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:40:56.213720       1 main.go:301] handling current node
I0522 15:41:06.215407       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:06.215504       1 main.go:301] handling current node
I0522 15:41:16.214609       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:16.215271       1 main.go:301] handling current node
I0522 15:41:26.212533       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:26.212687       1 main.go:301] handling current node
I0522 15:41:36.212344       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:36.212471       1 main.go:301] handling current node
I0522 15:41:46.214694       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:46.215187       1 main.go:301] handling current node
I0522 15:41:56.211919       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:41:56.212061       1 main.go:301] handling current node
I0522 15:42:06.211724       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:06.212049       1 main.go:301] handling current node
I0522 15:42:16.211694       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:16.211808       1 main.go:301] handling current node
I0522 15:42:26.210935       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:26.211049       1 main.go:301] handling current node
I0522 15:42:36.211514       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:36.211873       1 main.go:301] handling current node
I0522 15:42:46.211703       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:46.212094       1 main.go:301] handling current node
I0522 15:42:56.210436       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:42:56.210781       1 main.go:301] handling current node
I0522 15:43:06.211660       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:06.211755       1 main.go:301] handling current node
I0522 15:43:16.210431       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:16.210647       1 main.go:301] handling current node
I0522 15:43:26.212214       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:26.212388       1 main.go:301] handling current node
I0522 15:43:36.209838       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:36.210062       1 main.go:301] handling current node
I0522 15:43:46.210054       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:46.210269       1 main.go:301] handling current node
I0522 15:43:56.209226       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:43:56.209325       1 main.go:301] handling current node
I0522 15:44:06.208908       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:06.209013       1 main.go:301] handling current node
I0522 15:44:16.208935       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:16.209056       1 main.go:301] handling current node
I0522 15:44:26.208063       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:26.208190       1 main.go:301] handling current node
I0522 15:44:36.209305       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:36.209470       1 main.go:301] handling current node
I0522 15:44:46.208605       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:46.209019       1 main.go:301] handling current node
I0522 15:44:56.208969       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:44:56.209073       1 main.go:301] handling current node
I0522 15:45:06.207141       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:06.207384       1 main.go:301] handling current node
I0522 15:45:16.207329       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:16.207431       1 main.go:301] handling current node
I0522 15:45:26.209831       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:26.210013       1 main.go:301] handling current node
I0522 15:45:36.206629       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:36.206722       1 main.go:301] handling current node
I0522 15:45:46.208208       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:46.208884       1 main.go:301] handling current node
I0522 15:45:56.207084       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:45:56.207188       1 main.go:301] handling current node
I0522 15:46:06.205988       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:06.206098       1 main.go:301] handling current node
I0522 15:46:16.206001       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:16.206108       1 main.go:301] handling current node
I0522 15:46:26.205271       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:26.205463       1 main.go:301] handling current node
I0522 15:46:36.205228       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:36.205523       1 main.go:301] handling current node
I0522 15:46:46.205507       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:46.205784       1 main.go:301] handling current node
I0522 15:46:56.206597       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:46:56.206946       1 main.go:301] handling current node
I0522 15:47:06.205824       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:06.205905       1 main.go:301] handling current node
I0522 15:47:16.204653       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:16.204874       1 main.go:301] handling current node
I0522 15:47:26.203921       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:26.204128       1 main.go:301] handling current node
I0522 15:47:36.205740       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:36.205842       1 main.go:301] handling current node
I0522 15:47:46.203681       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:46.203824       1 main.go:301] handling current node
I0522 15:47:56.203556       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:47:56.203976       1 main.go:301] handling current node
I0522 15:48:06.203517       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:06.203599       1 main.go:301] handling current node
I0522 15:48:16.202998       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:16.203116       1 main.go:301] handling current node
I0522 15:48:26.202957       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:26.203030       1 main.go:301] handling current node
I0522 15:48:36.202164       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:36.202386       1 main.go:301] handling current node
I0522 15:48:46.202303       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:46.202458       1 main.go:301] handling current node
I0522 15:48:56.201300       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:48:56.201418       1 main.go:301] handling current node
I0522 15:49:06.202578       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:06.202684       1 main.go:301] handling current node
I0522 15:49:16.203591       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:16.203684       1 main.go:301] handling current node
I0522 15:49:26.200835       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:26.200988       1 main.go:301] handling current node
I0522 15:49:36.200768       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:36.200938       1 main.go:301] handling current node
I0522 15:49:46.202253       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:46.202603       1 main.go:301] handling current node
I0522 15:49:56.201571       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:49:56.201817       1 main.go:301] handling current node
I0522 15:50:06.199997       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:06.200354       1 main.go:301] handling current node
I0522 15:50:16.200694       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:16.200895       1 main.go:301] handling current node
I0522 15:50:26.199373       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:26.199578       1 main.go:301] handling current node
I0522 15:50:36.199432       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:36.199568       1 main.go:301] handling current node
I0522 15:50:46.199927       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:46.200551       1 main.go:301] handling current node
I0522 15:50:56.202625       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:50:56.203273       1 main.go:301] handling current node
I0522 15:51:06.199575       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:06.199682       1 main.go:301] handling current node
I0522 15:51:16.198542       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:16.198643       1 main.go:301] handling current node
I0522 15:51:26.197554       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:26.197686       1 main.go:301] handling current node
I0522 15:51:36.198079       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:36.198156       1 main.go:301] handling current node
I0522 15:51:46.197473       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:46.197674       1 main.go:301] handling current node
I0522 15:51:56.197731       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:51:56.197920       1 main.go:301] handling current node
I0522 15:52:06.198923       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:06.199046       1 main.go:301] handling current node
I0522 15:52:16.198845       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:16.198874       1 main.go:301] handling current node
I0522 15:52:26.197583       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:26.197667       1 main.go:301] handling current node
I0522 15:52:36.196561       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:36.196909       1 main.go:301] handling current node
I0522 15:52:46.196281       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:46.196428       1 main.go:301] handling current node
I0522 15:52:56.195329       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:52:56.195428       1 main.go:301] handling current node
I0522 15:53:06.197690       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:06.197953       1 main.go:301] handling current node
I0522 15:53:16.195562       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:16.195808       1 main.go:301] handling current node
I0522 15:53:26.194867       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:26.195006       1 main.go:301] handling current node
I0522 15:53:36.194877       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:36.195063       1 main.go:301] handling current node
I0522 15:53:46.215622       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:46.215996       1 main.go:301] handling current node
I0522 15:53:56.195262       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:53:56.196069       1 main.go:301] handling current node
I0522 15:54:06.194223       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:06.194487       1 main.go:301] handling current node
I0522 15:54:16.193932       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:16.194090       1 main.go:301] handling current node
I0522 15:54:26.193028       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:26.193174       1 main.go:301] handling current node
I0522 15:54:36.192780       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:36.192868       1 main.go:301] handling current node
I0522 15:54:46.193427       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:46.193917       1 main.go:301] handling current node
I0522 15:54:56.192856       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:54:56.192953       1 main.go:301] handling current node
I0522 15:55:06.192582       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:06.192682       1 main.go:301] handling current node
I0522 15:55:16.193793       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:16.193851       1 main.go:301] handling current node
I0522 15:55:26.191144       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:26.191252       1 main.go:301] handling current node
I0522 15:55:36.192618       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:36.193026       1 main.go:301] handling current node
I0522 15:55:46.191694       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:46.192095       1 main.go:301] handling current node
I0522 15:55:56.190856       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:55:56.191017       1 main.go:301] handling current node
I0522 15:56:06.190517       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:06.190590       1 main.go:301] handling current node
I0522 15:56:16.192366       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:16.192833       1 main.go:301] handling current node
I0522 15:56:26.190500       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:26.190770       1 main.go:301] handling current node
I0522 15:56:36.193226       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:36.193348       1 main.go:301] handling current node
I0522 15:56:46.192176       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:46.192778       1 main.go:301] handling current node
I0522 15:56:56.189342       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:56:56.189472       1 main.go:301] handling current node
I0522 15:57:06.190268       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:06.190368       1 main.go:301] handling current node
I0522 15:57:16.189177       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:16.189257       1 main.go:301] handling current node
I0522 15:57:26.189150       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:26.189819       1 main.go:301] handling current node
I0522 15:57:36.189579       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:36.190160       1 main.go:301] handling current node
I0522 15:57:46.197216       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:46.198087       1 main.go:301] handling current node
I0522 15:57:56.187172       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:57:56.187344       1 main.go:301] handling current node
I0522 15:58:06.185828       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:06.186064       1 main.go:301] handling current node
I0522 15:58:16.186608       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:16.186664       1 main.go:301] handling current node
I0522 15:58:26.189023       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:26.189709       1 main.go:301] handling current node
I0522 15:58:36.187933       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:36.188141       1 main.go:301] handling current node
I0522 15:58:46.189012       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:46.189156       1 main.go:301] handling current node
I0522 15:58:56.186692       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:58:56.186920       1 main.go:301] handling current node
I0522 15:59:06.186467       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:06.186658       1 main.go:301] handling current node
I0522 15:59:16.186812       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:16.186936       1 main.go:301] handling current node
I0522 15:59:26.187769       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:26.187872       1 main.go:301] handling current node
I0522 15:59:36.186223       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:36.186523       1 main.go:301] handling current node
I0522 15:59:46.185891       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:46.186074       1 main.go:301] handling current node
I0522 15:59:56.188994       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 15:59:56.189186       1 main.go:301] handling current node
I0522 16:00:06.184624       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:06.184897       1 main.go:301] handling current node
I0522 16:00:16.184828       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:16.185025       1 main.go:301] handling current node
I0522 16:00:26.254053       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:26.254197       1 main.go:301] handling current node
I0522 16:00:36.253221       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:36.253616       1 main.go:301] handling current node
I0522 16:00:46.252241       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:46.252388       1 main.go:301] handling current node
I0522 16:00:56.251790       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:00:56.252784       1 main.go:301] handling current node
I0522 16:01:06.251014       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:06.251128       1 main.go:301] handling current node
I0522 16:01:16.251074       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:16.251190       1 main.go:301] handling current node
I0522 16:01:26.252895       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:26.253453       1 main.go:301] handling current node
I0522 16:01:36.251600       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:36.251754       1 main.go:301] handling current node
I0522 16:01:46.252592       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:46.252934       1 main.go:301] handling current node
I0522 16:01:56.251028       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:01:56.251229       1 main.go:301] handling current node
I0522 16:02:06.252409       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:06.252559       1 main.go:301] handling current node
I0522 16:02:16.251592       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:16.252365       1 main.go:301] handling current node
I0522 16:02:26.252408       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:26.252522       1 main.go:301] handling current node
I0522 16:02:36.252327       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:36.252640       1 main.go:301] handling current node
I0522 16:02:46.251334       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:46.251660       1 main.go:301] handling current node
I0522 16:02:56.250535       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:02:56.250602       1 main.go:301] handling current node
I0522 16:03:06.249555       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:06.249727       1 main.go:301] handling current node
I0522 16:03:16.251402       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:16.251597       1 main.go:301] handling current node
I0522 16:03:26.249689       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:26.249727       1 main.go:301] handling current node
I0522 16:03:36.249758       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:36.250046       1 main.go:301] handling current node
I0522 16:03:46.249998       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:46.250265       1 main.go:301] handling current node
I0522 16:03:56.247927       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:03:56.248419       1 main.go:301] handling current node
I0522 16:04:06.246511       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:06.246714       1 main.go:301] handling current node
I0522 16:04:16.247017       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:16.247964       1 main.go:301] handling current node
I0522 16:04:26.250760       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:26.250878       1 main.go:301] handling current node
I0522 16:04:36.252806       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:36.253134       1 main.go:301] handling current node
I0522 16:04:46.258693       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:46.259643       1 main.go:301] handling current node
I0522 16:04:56.251456       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:04:56.251497       1 main.go:301] handling current node
I0522 16:05:06.449564       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:06.449844       1 main.go:301] handling current node
I0522 16:05:16.251540       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:16.251582       1 main.go:301] handling current node
I0522 16:05:26.252887       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:26.252906       1 main.go:301] handling current node
I0522 16:05:36.253080       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:36.253158       1 main.go:301] handling current node
I0522 16:05:46.251895       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:46.252234       1 main.go:301] handling current node
I0522 16:05:56.252198       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:05:56.252304       1 main.go:301] handling current node
I0522 16:06:06.252008       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:06.252088       1 main.go:301] handling current node
I0522 16:06:16.252699       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:16.252817       1 main.go:301] handling current node
I0522 16:06:26.252927       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:26.253027       1 main.go:301] handling current node
I0522 16:06:36.251872       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:36.252090       1 main.go:301] handling current node
I0522 16:06:46.251941       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:46.252031       1 main.go:301] handling current node
I0522 16:06:56.760773       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:06:56.761012       1 main.go:301] handling current node
I0522 16:07:06.760569       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:07:06.760719       1 main.go:301] handling current node
I0522 16:07:16.761681       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:07:16.761757       1 main.go:301] handling current node
I0522 16:10:57.488684       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:10:57.488845       1 main.go:301] handling current node
I0522 16:11:07.488657       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:11:07.489141       1 main.go:301] handling current node
I0522 16:11:17.486570       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:11:17.486696       1 main.go:301] handling current node
I0522 16:11:27.486870       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:11:27.487308       1 main.go:301] handling current node
I0522 16:11:37.486009       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:11:37.486125       1 main.go:301] handling current node
I0522 16:11:47.487479       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:11:47.488365       1 main.go:301] handling current node
I0522 16:28:05.748459       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:05.748497       1 main.go:301] handling current node
I0522 16:28:15.747306       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:15.747845       1 main.go:301] handling current node
I0522 16:28:25.747943       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:25.748173       1 main.go:301] handling current node
I0522 16:28:35.748585       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:35.748855       1 main.go:301] handling current node
I0522 16:28:45.747317       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:45.747422       1 main.go:301] handling current node
I0522 16:28:55.748554       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:28:55.748630       1 main.go:301] handling current node
I0522 16:29:05.878332       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:29:05.878787       1 main.go:301] handling current node
I0522 16:32:21.287808       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:32:21.288320       1 main.go:301] handling current node
I0522 16:32:31.286956       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:32:31.287084       1 main.go:301] handling current node
I0522 16:32:41.286186       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:32:41.286396       1 main.go:301] handling current node
I0522 16:32:51.299880       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:32:51.299964       1 main.go:301] handling current node
I0522 16:33:01.299668       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:01.299760       1 main.go:301] handling current node
I0522 16:33:11.301599       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:11.301708       1 main.go:301] handling current node
I0522 16:33:21.300336       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:21.300430       1 main.go:301] handling current node
I0522 16:33:31.300764       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:31.300885       1 main.go:301] handling current node
I0522 16:33:41.300791       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:41.301102       1 main.go:301] handling current node
I0522 16:33:51.300227       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:33:51.300325       1 main.go:301] handling current node
I0522 16:34:01.300203       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:01.300270       1 main.go:301] handling current node
I0522 16:34:11.300711       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:11.301139       1 main.go:301] handling current node
I0522 16:34:21.302697       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:21.302929       1 main.go:301] handling current node
I0522 16:34:31.319022       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:31.320725       1 main.go:301] handling current node
I0522 16:34:41.301250       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:41.301362       1 main.go:301] handling current node
I0522 16:34:51.302825       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:34:51.303340       1 main.go:301] handling current node
I0522 16:35:01.301210       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:01.301417       1 main.go:301] handling current node
I0522 16:35:11.301118       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:11.301223       1 main.go:301] handling current node
I0522 16:35:21.302075       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:21.302327       1 main.go:301] handling current node
I0522 16:35:31.303125       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:31.303192       1 main.go:301] handling current node
I0522 16:35:41.302453       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:41.302863       1 main.go:301] handling current node
I0522 16:35:51.301837       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:35:51.301978       1 main.go:301] handling current node
I0522 16:36:01.301697       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:01.302137       1 main.go:301] handling current node
I0522 16:36:11.303220       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:11.303420       1 main.go:301] handling current node
I0522 16:36:21.303626       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:21.303808       1 main.go:301] handling current node
I0522 16:36:31.303556       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:31.304064       1 main.go:301] handling current node
I0522 16:36:41.309356       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:41.309461       1 main.go:301] handling current node
I0522 16:36:51.306542       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:36:51.306857       1 main.go:301] handling current node
I0522 16:37:01.304094       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:01.304167       1 main.go:301] handling current node
I0522 16:37:11.303868       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:11.304004       1 main.go:301] handling current node
I0522 16:37:21.303875       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:21.303948       1 main.go:301] handling current node
I0522 16:37:31.304614       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:31.305250       1 main.go:301] handling current node
I0522 16:37:41.304019       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:41.304242       1 main.go:301] handling current node
I0522 16:37:51.303947       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:37:51.304022       1 main.go:301] handling current node
I0522 16:38:01.304088       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:01.304213       1 main.go:301] handling current node
I0522 16:38:11.304067       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:11.304213       1 main.go:301] handling current node
I0522 16:38:21.304083       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:21.304299       1 main.go:301] handling current node
I0522 16:38:31.302322       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:31.302594       1 main.go:301] handling current node
I0522 16:38:41.302240       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:41.302554       1 main.go:301] handling current node
I0522 16:38:51.308069       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:38:51.308659       1 main.go:301] handling current node
I0522 16:39:01.308491       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:01.309397       1 main.go:301] handling current node
I0522 16:39:11.305701       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:11.305951       1 main.go:301] handling current node
I0522 16:39:21.322604       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:21.324176       1 main.go:301] handling current node
I0522 16:39:31.306784       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:31.308054       1 main.go:301] handling current node
I0522 16:39:41.306089       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:41.306231       1 main.go:301] handling current node
I0522 16:39:51.308161       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:39:51.308424       1 main.go:301] handling current node
I0522 16:40:01.306579       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:01.306702       1 main.go:301] handling current node
I0522 16:40:11.307979       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:11.308182       1 main.go:301] handling current node
I0522 16:40:21.307249       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:21.307351       1 main.go:301] handling current node
I0522 16:40:31.308156       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:31.308520       1 main.go:301] handling current node
I0522 16:40:41.307192       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:41.307318       1 main.go:301] handling current node
I0522 16:40:52.222804       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:40:52.222896       1 main.go:301] handling current node
I0522 16:41:02.218700       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:41:02.218789       1 main.go:301] handling current node
I0522 16:41:12.218896       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:41:12.219132       1 main.go:301] handling current node
I0522 16:41:22.220520       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:41:22.220992       1 main.go:301] handling current node
I0522 16:41:32.220218       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:41:32.220381       1 main.go:301] handling current node
I0522 16:41:42.220089       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:41:42.220246       1 main.go:301] handling current node
I0522 16:57:37.034385       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:57:37.034542       1 main.go:301] handling current node
I0522 16:57:47.031189       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:57:47.031341       1 main.go:301] handling current node
I0522 16:57:57.031604       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 16:57:57.032255       1 main.go:301] handling current node
I0522 17:07:39.761035       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:07:39.761179       1 main.go:301] handling current node
I0522 17:07:49.762584       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:07:49.763161       1 main.go:301] handling current node
I0522 17:07:59.762269       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:07:59.762471       1 main.go:301] handling current node
I0522 17:08:09.760424       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:08:09.760609       1 main.go:301] handling current node
I0522 17:08:19.761371       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:08:19.761530       1 main.go:301] handling current node
I0522 17:08:29.760542       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:08:29.760807       1 main.go:301] handling current node
I0522 17:09:09.822371       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:09.822661       1 main.go:301] handling current node
I0522 17:09:19.823567       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:19.824249       1 main.go:301] handling current node
I0522 17:09:29.820860       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:29.820967       1 main.go:301] handling current node
I0522 17:09:39.820165       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:39.820255       1 main.go:301] handling current node
I0522 17:09:49.820455       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:49.820634       1 main.go:301] handling current node
I0522 17:09:59.820571       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:09:59.820668       1 main.go:301] handling current node
I0522 17:10:09.823388       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:09.823519       1 main.go:301] handling current node
I0522 17:10:19.821301       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:19.821758       1 main.go:301] handling current node
I0522 17:10:29.821842       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:29.822026       1 main.go:301] handling current node
I0522 17:10:39.822911       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:39.823041       1 main.go:301] handling current node
I0522 17:10:49.820923       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:49.821470       1 main.go:301] handling current node
I0522 17:10:59.820331       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:10:59.820476       1 main.go:301] handling current node
I0522 17:11:09.820565       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:09.820705       1 main.go:301] handling current node
I0522 17:11:19.820570       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:19.820751       1 main.go:301] handling current node
I0522 17:11:29.821273       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:29.821358       1 main.go:301] handling current node
I0522 17:11:39.820033       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:39.820126       1 main.go:301] handling current node
I0522 17:11:49.822179       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:49.822369       1 main.go:301] handling current node
I0522 17:11:59.821734       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:11:59.821818       1 main.go:301] handling current node
I0522 17:12:09.820055       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:09.820191       1 main.go:301] handling current node
I0522 17:12:19.820715       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:19.821313       1 main.go:301] handling current node
I0522 17:12:29.820633       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:29.821008       1 main.go:301] handling current node
I0522 17:12:39.821854       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:39.822024       1 main.go:301] handling current node
I0522 17:12:49.820742       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:49.820865       1 main.go:301] handling current node
I0522 17:12:59.820619       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:12:59.820718       1 main.go:301] handling current node
I0522 17:13:09.819871       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:09.820074       1 main.go:301] handling current node
I0522 17:13:19.820951       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:19.821157       1 main.go:301] handling current node
I0522 17:13:29.820158       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:29.820253       1 main.go:301] handling current node
I0522 17:13:39.819822       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:39.819924       1 main.go:301] handling current node
I0522 17:13:49.821409       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:49.821576       1 main.go:301] handling current node
I0522 17:13:59.819611       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:13:59.819684       1 main.go:301] handling current node
I0522 17:14:09.819965       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:09.820170       1 main.go:301] handling current node
I0522 17:14:19.821578       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:19.821723       1 main.go:301] handling current node
I0522 17:14:29.819630       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:29.819701       1 main.go:301] handling current node
I0522 17:14:39.821552       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:39.821703       1 main.go:301] handling current node
I0522 17:14:49.819436       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:49.819514       1 main.go:301] handling current node
I0522 17:14:59.819207       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:14:59.819301       1 main.go:301] handling current node
I0522 17:15:09.819633       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:09.819724       1 main.go:301] handling current node
I0522 17:15:19.820211       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:19.820871       1 main.go:301] handling current node
I0522 17:15:29.821346       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:29.821474       1 main.go:301] handling current node
I0522 17:15:39.819441       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:39.819667       1 main.go:301] handling current node
I0522 17:15:49.819057       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:49.819122       1 main.go:301] handling current node
I0522 17:15:59.819209       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:15:59.819283       1 main.go:301] handling current node
I0522 17:16:09.819610       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:09.819644       1 main.go:301] handling current node
I0522 17:16:19.819421       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:19.819661       1 main.go:301] handling current node
I0522 17:16:29.820771       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:29.821022       1 main.go:301] handling current node
I0522 17:16:39.818950       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:39.819052       1 main.go:301] handling current node
I0522 17:16:49.819149       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:49.819317       1 main.go:301] handling current node
I0522 17:16:59.825276       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:16:59.825409       1 main.go:301] handling current node
I0522 17:17:09.825030       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:09.825249       1 main.go:301] handling current node
I0522 17:17:19.819220       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:19.819333       1 main.go:301] handling current node
I0522 17:17:29.819140       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:29.819267       1 main.go:301] handling current node
I0522 17:17:39.819417       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:39.819529       1 main.go:301] handling current node
I0522 17:17:49.821011       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:49.821316       1 main.go:301] handling current node
I0522 17:17:59.818705       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:17:59.818825       1 main.go:301] handling current node
I0522 17:18:09.818676       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:09.818815       1 main.go:301] handling current node
I0522 17:18:19.818958       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:19.819307       1 main.go:301] handling current node
I0522 17:18:29.819591       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:29.820215       1 main.go:301] handling current node
I0522 17:18:39.819607       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:39.819715       1 main.go:301] handling current node
I0522 17:18:49.818527       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:49.818628       1 main.go:301] handling current node
I0522 17:18:59.819198       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:18:59.819291       1 main.go:301] handling current node
I0522 17:19:09.794287       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:09.794768       1 main.go:301] handling current node
I0522 17:19:19.792932       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:19.793342       1 main.go:301] handling current node
I0522 17:19:29.793379       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:29.793770       1 main.go:301] handling current node
I0522 17:19:39.788688       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:39.788885       1 main.go:301] handling current node
I0522 17:19:49.787402       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:49.787571       1 main.go:301] handling current node
I0522 17:19:59.787114       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:19:59.787193       1 main.go:301] handling current node
I0522 17:20:09.787521       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:09.788078       1 main.go:301] handling current node
I0522 17:20:19.787938       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:19.788048       1 main.go:301] handling current node
I0522 17:20:29.786411       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:29.786553       1 main.go:301] handling current node
I0522 17:20:39.786470       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:39.786671       1 main.go:301] handling current node
I0522 17:20:49.785740       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:49.785889       1 main.go:301] handling current node
I0522 17:20:59.790067       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:20:59.790260       1 main.go:301] handling current node
I0522 17:21:09.785488       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:09.785578       1 main.go:301] handling current node
I0522 17:21:19.786989       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:19.787222       1 main.go:301] handling current node
I0522 17:21:29.785703       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:29.785884       1 main.go:301] handling current node
I0522 17:21:39.784993       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:39.785043       1 main.go:301] handling current node
I0522 17:21:49.784941       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:49.785032       1 main.go:301] handling current node
I0522 17:21:59.787475       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:21:59.787562       1 main.go:301] handling current node
I0522 17:22:09.785053       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:09.785135       1 main.go:301] handling current node
I0522 17:22:19.784820       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:19.784957       1 main.go:301] handling current node
I0522 17:22:29.786002       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:29.786167       1 main.go:301] handling current node
I0522 17:22:39.784273       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:39.784365       1 main.go:301] handling current node
I0522 17:22:49.784813       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:49.784914       1 main.go:301] handling current node
I0522 17:22:59.786838       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:22:59.786912       1 main.go:301] handling current node
I0522 17:23:09.784736       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:09.784824       1 main.go:301] handling current node
I0522 17:23:19.785062       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:19.785351       1 main.go:301] handling current node
I0522 17:23:29.783931       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:29.784036       1 main.go:301] handling current node
I0522 17:23:39.783810       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:39.783891       1 main.go:301] handling current node
I0522 17:23:49.783579       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:49.783671       1 main.go:301] handling current node
I0522 17:23:59.783619       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:23:59.783712       1 main.go:301] handling current node
I0522 17:24:09.783337       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:09.783421       1 main.go:301] handling current node
I0522 17:24:19.784294       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:19.785053       1 main.go:301] handling current node
I0522 17:24:29.783385       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:29.783487       1 main.go:301] handling current node
I0522 17:24:39.782832       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:39.782961       1 main.go:301] handling current node
I0522 17:24:49.782968       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:49.783132       1 main.go:301] handling current node
I0522 17:24:59.782867       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:24:59.783008       1 main.go:301] handling current node
I0522 17:25:09.784164       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:09.784251       1 main.go:301] handling current node
I0522 17:25:19.782861       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:19.783013       1 main.go:301] handling current node
I0522 17:25:29.784854       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:29.784935       1 main.go:301] handling current node
I0522 17:25:39.782348       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:39.782660       1 main.go:301] handling current node
I0522 17:25:49.782879       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:49.782983       1 main.go:301] handling current node
I0522 17:25:59.782107       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:25:59.782206       1 main.go:301] handling current node
I0522 17:26:09.779921       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:09.780068       1 main.go:301] handling current node
I0522 17:26:19.783218       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:19.783383       1 main.go:301] handling current node
I0522 17:26:29.779965       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:29.779995       1 main.go:301] handling current node
I0522 17:26:39.782405       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:39.782598       1 main.go:301] handling current node
I0522 17:26:49.782261       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:49.782388       1 main.go:301] handling current node
I0522 17:26:59.783778       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:26:59.783860       1 main.go:301] handling current node
I0522 17:27:09.781653       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:09.781750       1 main.go:301] handling current node
I0522 17:27:19.781373       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:19.781761       1 main.go:301] handling current node
I0522 17:27:29.782485       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:29.782547       1 main.go:301] handling current node
I0522 17:27:39.780692       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:39.780797       1 main.go:301] handling current node
I0522 17:27:49.780936       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:49.781085       1 main.go:301] handling current node
I0522 17:27:59.780733       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:27:59.780818       1 main.go:301] handling current node
I0522 17:28:09.781274       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:09.781356       1 main.go:301] handling current node
I0522 17:28:19.781257       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:19.782203       1 main.go:301] handling current node
I0522 17:28:29.781175       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:29.781275       1 main.go:301] handling current node
I0522 17:28:39.779453       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:39.779614       1 main.go:301] handling current node
I0522 17:28:49.779152       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:49.779229       1 main.go:301] handling current node
I0522 17:28:59.780597       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:28:59.780966       1 main.go:301] handling current node
I0522 17:29:09.779525       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:09.779643       1 main.go:301] handling current node
I0522 17:29:19.782136       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:19.782269       1 main.go:301] handling current node
I0522 17:29:29.779843       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:29.779957       1 main.go:301] handling current node
I0522 17:29:39.780191       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:39.780235       1 main.go:301] handling current node
I0522 17:29:49.779053       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:49.779192       1 main.go:301] handling current node
I0522 17:29:59.780060       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:29:59.780122       1 main.go:301] handling current node
I0522 17:30:09.780317       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:09.780391       1 main.go:301] handling current node
I0522 17:30:19.779060       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:19.779234       1 main.go:301] handling current node
I0522 17:30:29.778702       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:29.778784       1 main.go:301] handling current node
I0522 17:30:39.778189       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:39.778259       1 main.go:301] handling current node
I0522 17:30:49.779585       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:49.779731       1 main.go:301] handling current node
I0522 17:30:59.779589       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:30:59.779809       1 main.go:301] handling current node
I0522 17:31:09.780706       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:09.780780       1 main.go:301] handling current node
I0522 17:31:19.778948       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:19.779074       1 main.go:301] handling current node
I0522 17:31:29.778315       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:29.778628       1 main.go:301] handling current node
I0522 17:31:39.776999       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:39.777096       1 main.go:301] handling current node
I0522 17:31:49.777440       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:49.777539       1 main.go:301] handling current node
I0522 17:31:59.777627       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:31:59.777716       1 main.go:301] handling current node
I0522 17:32:09.778078       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:09.778197       1 main.go:301] handling current node
I0522 17:32:19.776869       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:19.777102       1 main.go:301] handling current node
I0522 17:32:29.778766       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:29.778912       1 main.go:301] handling current node
I0522 17:32:39.776668       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:39.776770       1 main.go:301] handling current node
I0522 17:32:49.776283       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:49.776389       1 main.go:301] handling current node
I0522 17:32:59.776671       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:32:59.776849       1 main.go:301] handling current node
I0522 17:33:09.777526       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:09.777625       1 main.go:301] handling current node
I0522 17:33:19.779620       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:19.781101       1 main.go:301] handling current node
I0522 17:33:29.776864       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:29.777384       1 main.go:301] handling current node
I0522 17:33:39.725978       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:39.726347       1 main.go:301] handling current node
I0522 17:33:49.711716       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:49.712458       1 main.go:301] handling current node
I0522 17:33:59.711214       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:33:59.712004       1 main.go:301] handling current node
I0522 17:34:09.711125       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:09.711201       1 main.go:301] handling current node
I0522 17:34:19.714289       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:19.715074       1 main.go:301] handling current node
I0522 17:34:29.711520       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:29.711651       1 main.go:301] handling current node
I0522 17:34:39.710431       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:39.710519       1 main.go:301] handling current node
I0522 17:34:49.715354       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:49.715690       1 main.go:301] handling current node
I0522 17:34:59.710376       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:34:59.710549       1 main.go:301] handling current node
I0522 17:35:09.709327       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:09.709483       1 main.go:301] handling current node
I0522 17:35:19.709185       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:19.709244       1 main.go:301] handling current node
I0522 17:35:29.709434       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:29.709680       1 main.go:301] handling current node
I0522 17:35:39.708892       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:39.709061       1 main.go:301] handling current node
I0522 17:35:49.707912       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:49.708015       1 main.go:301] handling current node
I0522 17:35:59.708388       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:35:59.708760       1 main.go:301] handling current node
I0522 17:36:09.707016       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:09.707127       1 main.go:301] handling current node
I0522 17:36:19.708530       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:19.712952       1 main.go:301] handling current node
I0522 17:36:29.707305       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:29.707657       1 main.go:301] handling current node
I0522 17:36:39.706248       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:39.706502       1 main.go:301] handling current node
I0522 17:36:49.706427       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:49.706806       1 main.go:301] handling current node
I0522 17:36:59.707223       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:36:59.707366       1 main.go:301] handling current node
I0522 17:37:09.704210       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:09.704310       1 main.go:301] handling current node
I0522 17:37:19.704572       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:19.704788       1 main.go:301] handling current node
I0522 17:37:29.704236       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:29.704342       1 main.go:301] handling current node
I0522 17:37:39.703242       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:39.703340       1 main.go:301] handling current node
I0522 17:37:49.706250       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:49.706893       1 main.go:301] handling current node
I0522 17:37:59.705189       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:37:59.705849       1 main.go:301] handling current node
I0522 17:38:09.703701       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:09.703835       1 main.go:301] handling current node
I0522 17:38:19.703246       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:19.703282       1 main.go:301] handling current node
I0522 17:38:29.704952       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:29.708075       1 main.go:301] handling current node
I0522 17:38:39.704072       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:39.704532       1 main.go:301] handling current node
I0522 17:38:49.701607       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:49.701845       1 main.go:301] handling current node
I0522 17:38:59.702857       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:38:59.703275       1 main.go:301] handling current node
I0522 17:39:09.699881       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:09.699978       1 main.go:301] handling current node
I0522 17:39:19.700232       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:19.700461       1 main.go:301] handling current node
I0522 17:39:29.701235       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:29.701325       1 main.go:301] handling current node
I0522 17:39:39.700476       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:39.700599       1 main.go:301] handling current node
I0522 17:39:49.699315       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:49.699369       1 main.go:301] handling current node
I0522 17:39:59.699422       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:39:59.699520       1 main.go:301] handling current node
I0522 17:40:09.698496       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:09.698609       1 main.go:301] handling current node
I0522 17:40:19.698655       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:19.698812       1 main.go:301] handling current node
I0522 17:40:29.698415       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:29.698611       1 main.go:301] handling current node
I0522 17:40:39.697300       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:39.697331       1 main.go:301] handling current node
I0522 17:40:49.697561       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:49.697608       1 main.go:301] handling current node
I0522 17:40:59.696476       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:40:59.696595       1 main.go:301] handling current node
I0522 17:41:09.698327       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:09.698384       1 main.go:301] handling current node
I0522 17:41:19.696169       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:19.696252       1 main.go:301] handling current node
I0522 17:41:29.696127       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:29.696251       1 main.go:301] handling current node
I0522 17:41:39.684855       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:39.684937       1 main.go:301] handling current node
I0522 17:41:49.685917       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:49.686066       1 main.go:301] handling current node
I0522 17:41:59.684976       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:41:59.685068       1 main.go:301] handling current node
I0522 17:42:09.694124       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:09.694191       1 main.go:301] handling current node
I0522 17:42:19.694025       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:19.694222       1 main.go:301] handling current node
I0522 17:42:29.694092       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:29.694195       1 main.go:301] handling current node
I0522 17:42:39.692744       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:39.692860       1 main.go:301] handling current node
I0522 17:42:49.694034       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:49.694143       1 main.go:301] handling current node
I0522 17:42:59.692885       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:42:59.692963       1 main.go:301] handling current node
I0522 17:43:09.691451       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:09.691652       1 main.go:301] handling current node
I0522 17:43:19.691596       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:19.691791       1 main.go:301] handling current node
I0522 17:43:29.693497       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:29.693757       1 main.go:301] handling current node
I0522 17:43:39.690702       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:39.690884       1 main.go:301] handling current node
I0522 17:43:49.690711       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:49.690820       1 main.go:301] handling current node
I0522 17:43:59.690309       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:43:59.690446       1 main.go:301] handling current node
I0522 17:44:09.690663       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:09.690715       1 main.go:301] handling current node
I0522 17:44:19.691993       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:19.692766       1 main.go:301] handling current node
I0522 17:44:29.690537       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:29.690979       1 main.go:301] handling current node
I0522 17:44:39.688855       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:39.689354       1 main.go:301] handling current node
I0522 17:44:49.688412       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:49.688960       1 main.go:301] handling current node
I0522 17:44:59.690284       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:44:59.690387       1 main.go:301] handling current node
I0522 17:45:09.688468       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:09.688684       1 main.go:301] handling current node
I0522 17:45:19.686818       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:19.686943       1 main.go:301] handling current node
I0522 17:45:29.686995       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:29.687167       1 main.go:301] handling current node
I0522 17:45:39.689693       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:39.689972       1 main.go:301] handling current node
I0522 17:45:49.688171       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:49.688235       1 main.go:301] handling current node
I0522 17:45:59.687011       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:45:59.687252       1 main.go:301] handling current node
I0522 17:46:09.686473       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:09.686572       1 main.go:301] handling current node
I0522 17:46:19.685080       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:19.685168       1 main.go:301] handling current node
I0522 17:46:29.685221       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:29.685378       1 main.go:301] handling current node
I0522 17:46:39.685211       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:39.685298       1 main.go:301] handling current node
I0522 17:46:49.684044       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:49.684160       1 main.go:301] handling current node
I0522 17:46:59.685317       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:46:59.685368       1 main.go:301] handling current node
I0522 17:47:09.684237       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:09.684318       1 main.go:301] handling current node
I0522 17:47:19.684988       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:19.685172       1 main.go:301] handling current node
I0522 17:47:29.687396       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:29.687451       1 main.go:301] handling current node
I0522 17:47:39.681925       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:39.682059       1 main.go:301] handling current node
I0522 17:47:49.682262       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:49.682573       1 main.go:301] handling current node
I0522 17:47:59.682204       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:47:59.682371       1 main.go:301] handling current node
I0522 17:48:09.683145       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:09.683616       1 main.go:301] handling current node
I0522 17:48:19.681053       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:19.681466       1 main.go:301] handling current node
I0522 17:48:29.688139       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:29.689240       1 main.go:301] handling current node
I0522 17:48:39.682462       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:39.686007       1 main.go:301] handling current node
I0522 17:48:49.679788       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:49.679951       1 main.go:301] handling current node
I0522 17:48:59.696184       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:48:59.696770       1 main.go:301] handling current node
I0522 17:49:09.678226       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:09.678401       1 main.go:301] handling current node
I0522 17:49:19.678456       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:19.678688       1 main.go:301] handling current node
I0522 17:49:29.678848       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:29.679162       1 main.go:301] handling current node
I0522 17:49:39.679388       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:39.679508       1 main.go:301] handling current node
I0522 17:49:49.677094       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:49.677218       1 main.go:301] handling current node
I0522 17:49:59.677282       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:49:59.677502       1 main.go:301] handling current node
I0522 17:50:09.696338       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:09.696720       1 main.go:301] handling current node
I0522 17:50:19.677803       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:19.678008       1 main.go:301] handling current node
I0522 17:50:29.678718       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:29.679032       1 main.go:301] handling current node
I0522 17:50:39.674790       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:39.674888       1 main.go:301] handling current node
I0522 17:50:49.674812       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:49.674919       1 main.go:301] handling current node
I0522 17:50:59.876937       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:50:59.880211       1 main.go:301] handling current node
I0522 17:51:09.679623       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:09.679824       1 main.go:301] handling current node
I0522 17:51:19.678366       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:19.678848       1 main.go:301] handling current node
I0522 17:51:29.674556       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:29.675338       1 main.go:301] handling current node
I0522 17:51:39.673601       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:39.673681       1 main.go:301] handling current node
I0522 17:51:49.674757       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:49.675157       1 main.go:301] handling current node
I0522 17:51:59.674618       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:51:59.674663       1 main.go:301] handling current node
I0522 17:52:09.672353       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:09.672431       1 main.go:301] handling current node
I0522 17:52:19.672955       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:19.673100       1 main.go:301] handling current node
I0522 17:52:29.672411       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:29.672542       1 main.go:301] handling current node
I0522 17:52:39.671436       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:39.671505       1 main.go:301] handling current node
I0522 17:52:49.687008       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:49.768642       1 main.go:301] handling current node
I0522 17:52:59.672538       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:52:59.672626       1 main.go:301] handling current node
I0522 17:53:09.671521       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:09.671622       1 main.go:301] handling current node
I0522 17:53:19.671690       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:19.672407       1 main.go:301] handling current node
I0522 17:53:29.670155       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:29.670639       1 main.go:301] handling current node
I0522 17:53:39.668924       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:39.669323       1 main.go:301] handling current node
I0522 17:53:49.674973       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:49.766386       1 main.go:301] handling current node
I0522 17:53:59.669030       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:53:59.669495       1 main.go:301] handling current node
I0522 17:54:09.668012       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:54:09.668347       1 main.go:301] handling current node
I0522 17:54:19.669698       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:54:19.670275       1 main.go:301] handling current node
I0522 17:54:29.670133       1 main.go:297] Handling node with IPs: map[172.18.0.2:{}]
I0522 17:54:29.670550       1 main.go:301] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-vrhgz ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-hawk-control-plane ====
W0522 15:29:29.643660       1 registry.go:256] calling componentGlobalsRegistry.AddFlags more than once, the registry will be set by the latest flags
I0522 15:29:29.644573       1 options.go:238] external host was not specified, using 172.18.0.2
I0522 15:29:29.647183       1 server.go:143] Version: v1.32.0
I0522 15:29:29.647211       1 server.go:145] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0522 15:29:29.943555       1 shared_informer.go:313] Waiting for caches to sync for node_authorizer
I0522 15:29:29.949082       1 shared_informer.go:313] Waiting for caches to sync for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0522 15:29:29.952324       1 plugins.go:157] Loaded 13 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionPolicy,MutatingAdmissionWebhook.
I0522 15:29:29.952336       1 plugins.go:160] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I0522 15:29:29.952454       1 instance.go:233] Using reconciler: lease
I0522 15:29:30.850951       1 handler.go:286] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W0522 15:29:30.850961       1 genericapiserver.go:767] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0522 15:29:30.919485       1 handler.go:286] Adding GroupVersion  v1 to ResourceManager
I0522 15:29:30.919593       1 apis.go:106] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0522 15:29:30.987249       1 apis.go:106] API group "storagemigration.k8s.io" is not enabled, skipping.
I0522 15:29:31.032736       1 apis.go:106] API group "resource.k8s.io" is not enabled, skipping.
I0522 15:29:31.036855       1 handler.go:286] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W0522 15:29:31.036866       1 genericapiserver.go:767] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.036868       1 genericapiserver.go:767] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.037079       1 handler.go:286] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W0522 15:29:31.037088       1 genericapiserver.go:767] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I0522 15:29:31.037371       1 handler.go:286] Adding GroupVersion autoscaling v2 to ResourceManager
I0522 15:29:31.037601       1 handler.go:286] Adding GroupVersion autoscaling v1 to ResourceManager
W0522 15:29:31.037606       1 genericapiserver.go:767] Skipping API autoscaling/v2beta1 because it has no resources.
W0522 15:29:31.037608       1 genericapiserver.go:767] Skipping API autoscaling/v2beta2 because it has no resources.
I0522 15:29:31.038035       1 handler.go:286] Adding GroupVersion batch v1 to ResourceManager
W0522 15:29:31.038040       1 genericapiserver.go:767] Skipping API batch/v1beta1 because it has no resources.
I0522 15:29:31.038308       1 handler.go:286] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W0522 15:29:31.038315       1 genericapiserver.go:767] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.038316       1 genericapiserver.go:767] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.038861       1 handler.go:286] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W0522 15:29:31.038868       1 genericapiserver.go:767] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.038869       1 genericapiserver.go:767] Skipping API coordination.k8s.io/v1alpha2 because it has no resources.
I0522 15:29:31.039087       1 handler.go:286] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
W0522 15:29:31.039096       1 genericapiserver.go:767] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I0522 15:29:31.039563       1 handler.go:286] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W0522 15:29:31.039570       1 genericapiserver.go:767] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.039571       1 genericapiserver.go:767] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.039692       1 handler.go:286] Adding GroupVersion node.k8s.io v1 to ResourceManager
W0522 15:29:31.039696       1 genericapiserver.go:767] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.039698       1 genericapiserver.go:767] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.039923       1 handler.go:286] Adding GroupVersion policy v1 to ResourceManager
W0522 15:29:31.039930       1 genericapiserver.go:767] Skipping API policy/v1beta1 because it has no resources.
I0522 15:29:31.040505       1 handler.go:286] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W0522 15:29:31.040512       1 genericapiserver.go:767] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.040514       1 genericapiserver.go:767] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.040640       1 handler.go:286] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W0522 15:29:31.040645       1 genericapiserver.go:767] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.040647       1 genericapiserver.go:767] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.041604       1 handler.go:286] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W0522 15:29:31.041610       1 genericapiserver.go:767] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.041612       1 genericapiserver.go:767] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.041929       1 handler.go:286] Adding GroupVersion flowcontrol.apiserver.k8s.io v1 to ResourceManager
W0522 15:29:31.041935       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta3 because it has no resources.
W0522 15:29:31.041936       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta2 because it has no resources.
W0522 15:29:31.041937       1 genericapiserver.go:767] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
I0522 15:29:31.043484       1 handler.go:286] Adding GroupVersion apps v1 to ResourceManager
W0522 15:29:31.043492       1 genericapiserver.go:767] Skipping API apps/v1beta2 because it has no resources.
W0522 15:29:31.043497       1 genericapiserver.go:767] Skipping API apps/v1beta1 because it has no resources.
I0522 15:29:31.044421       1 handler.go:286] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W0522 15:29:31.044430       1 genericapiserver.go:767] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0522 15:29:31.044434       1 genericapiserver.go:767] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I0522 15:29:31.044704       1 handler.go:286] Adding GroupVersion events.k8s.io v1 to ResourceManager
W0522 15:29:31.044711       1 genericapiserver.go:767] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0522 15:29:31.050094       1 handler.go:286] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W0522 15:29:31.050098       1 genericapiserver.go:767] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0522 15:29:31.245443       1 secure_serving.go:213] Serving securely on [::]:6443
I0522 15:29:31.245815       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0522 15:29:31.245868       1 dynamic_serving_content.go:135] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0522 15:29:31.246023       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I0522 15:29:31.246088       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0522 15:29:31.246100       1 apiservice_controller.go:100] Starting APIServiceRegistrationController
I0522 15:29:31.246103       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0522 15:29:31.246215       1 customresource_discovery_controller.go:292] Starting DiscoveryController
I0522 15:29:31.246241       1 apf_controller.go:377] Starting API Priority and Fairness config controller
I0522 15:29:31.246248       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0522 15:29:31.246314       1 controller.go:119] Starting legacy_token_tracking_controller
I0522 15:29:31.246318       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0522 15:29:31.246761       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0522 15:29:31.247076       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0522 15:29:31.256524       1 local_available_controller.go:156] Starting LocalAvailability controller
I0522 15:29:31.256533       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0522 15:29:31.256546       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0522 15:29:31.256550       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0522 15:29:31.256552       1 controller.go:78] Starting OpenAPI AggregationController
I0522 15:29:31.256702       1 cluster_authentication_trust_controller.go:462] Starting cluster_authentication_trust_controller controller
I0522 15:29:31.256712       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0522 15:29:31.256997       1 crd_finalizer.go:269] Starting CRDFinalizer
I0522 15:29:31.257101       1 controller.go:90] Starting OpenAPI V3 controller
I0522 15:29:31.257132       1 naming_controller.go:294] Starting NamingConditionController
I0522 15:29:31.257156       1 establishing_controller.go:81] Starting EstablishingController
I0522 15:29:31.257184       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0522 15:29:31.257195       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0522 15:29:31.257063       1 controller.go:142] Starting OpenAPI controller
I0522 15:29:31.257296       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0522 15:29:31.257385       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0522 15:29:31.257425       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0522 15:29:31.256547       1 aggregator.go:169] waiting for initial CRD sync...
I0522 15:29:31.262262       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0522 15:29:31.262280       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0522 15:29:31.345010       1 shared_informer.go:320] Caches are synced for node_authorizer
I0522 15:29:31.348513       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0522 15:29:31.348636       1 shared_informer.go:320] Caches are synced for configmaps
I0522 15:29:31.348695       1 handler.go:286] Adding GroupVersion argoproj.io v1alpha1 to ResourceManager
I0522 15:29:31.348721       1 handler.go:286] Adding GroupVersion app.k8s.io v1beta1 to ResourceManager
I0522 15:29:31.348741       1 handler.go:286] Adding GroupVersion kubeflow.org v1beta1 to ResourceManager
I0522 15:29:31.348849       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0522 15:29:31.348852       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0522 15:29:31.349250       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0522 15:29:31.349271       1 policy_source.go:240] refreshing policies
I0522 15:29:31.351245       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0522 15:29:31.357042       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0522 15:29:31.357198       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0522 15:29:31.357287       1 cache.go:39] Caches are synced for LocalAvailability controller
I0522 15:29:31.363055       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0522 15:29:31.363111       1 aggregator.go:171] initial CRD sync complete...
I0522 15:29:31.363128       1 autoregister_controller.go:144] Starting autoregister controller
I0522 15:29:31.363132       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0522 15:29:31.363134       1 cache.go:39] Caches are synced for autoregister controller
I0522 15:29:31.370054       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
E0522 15:29:31.373811       1 controller.go:195] "Failed to update lease" err="Operation cannot be fulfilled on leases.coordination.k8s.io \"apiserver-ayv5mr3enpvy76fgpqneeo43ae\": StorageError: invalid object, Code: 4, Key: /registry/leases/kube-system/apiserver-ayv5mr3enpvy76fgpqneeo43ae, ResourceVersion: 0, AdditionalErrorMsg: Precondition failed: UID in precondition: 59685d02-d9b7-4a2d-a0f3-ca7a59d5ae20, UID in object meta: "
I0522 15:29:32.249141       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0522 15:29:33.495031       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0522 15:29:52.475064       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0522 15:29:52.577053       1 controller.go:615] quota admission added evaluator for: endpoints
I0522 15:29:52.624316       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0522 15:29:52.725052       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0522 15:30:16.138090       1 controller.go:615] quota admission added evaluator for: workflows.argoproj.io
I0522 15:30:16.138330       1 controller.go:615] quota admission added evaluator for: workflows.argoproj.io
E0522 16:32:41.237915       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0522 16:32:41.826542       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0522 17:34:30.255686       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
E0522 17:34:30.674173       1 authentication.go:74] "Unable to authenticate the request" err="[invalid bearer token, service account token has expired]"
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-hawk-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-hawk-control-plane ====
I0522 15:29:29.980949       1 serving.go:386] Generated self-signed cert in-memory
I0522 15:29:30.402626       1 controllermanager.go:185] "Starting" version="v1.32.0"
I0522 15:29:30.403069       1 controllermanager.go:187] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0522 15:29:30.405422       1 secure_serving.go:213] Serving securely on 127.0.0.1:10257
I0522 15:29:30.407052       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I0522 15:29:30.407093       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0522 15:29:30.407104       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0522 15:29:30.407285       1 leaderelection.go:257] attempting to acquire leader lease kube-system/kube-controller-manager...
E0522 15:29:31.264763       1 leaderelection.go:436] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0522 15:29:50.913655       1 leaderelection.go:271] successfully acquired lease kube-system/kube-controller-manager
I0522 15:29:50.916113       1 event.go:389] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="hawk-control-plane_f7b729b3-f1c5-46d2-95d4-7eb47bafe524 became leader"
I0522 15:29:50.925081       1 controllermanager.go:765] "Started controller" controller="serviceaccount-token-controller"
I0522 15:29:50.925098       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="selinux-warning-controller" requiredFeatureGates=["SELinuxChangePolicy"]
I0522 15:29:50.925547       1 shared_informer.go:313] Waiting for caches to sync for tokens
I0522 15:29:50.927897       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-serving"
I0522 15:29:50.927912       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0522 15:29:50.928016       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0522 15:29:50.928036       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kubelet-client"
I0522 15:29:50.928041       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0522 15:29:50.928046       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0522 15:29:50.928275       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-kube-apiserver-client"
I0522 15:29:50.928314       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0522 15:29:50.928339       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0522 15:29:50.928589       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-signing-controller"
I0522 15:29:50.928807       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-signing-controller" name="csrsigning-legacy-unknown"
I0522 15:29:50.928815       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0522 15:29:50.928827       1 dynamic_serving_content.go:135] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0522 15:29:50.930311       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I0522 15:29:50.930318       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="resourceclaim-controller" requiredFeatureGates=["DynamicResourceAllocation"]
I0522 15:29:50.930446       1 cleaner.go:83] "Starting CSR cleaner controller" logger="certificatesigningrequest-cleaner-controller"
I0522 15:29:50.931449       1 controllermanager.go:765] "Started controller" controller="persistentvolume-binder-controller"
I0522 15:29:50.931456       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="storageversion-garbage-collector-controller" requiredFeatureGates=["APIServerIdentity","StorageVersionAPI"]
I0522 15:29:50.932182       1 pv_controller_base.go:308] "Starting persistent volume controller" logger="persistentvolume-binder-controller"
I0522 15:29:50.932196       1 shared_informer.go:313] Waiting for caches to sync for persistent volume
I0522 15:29:50.932186       1 controllermanager.go:765] "Started controller" controller="legacy-serviceaccount-token-cleaner-controller"
I0522 15:29:50.932220       1 legacy_serviceaccount_token_cleaner.go:103] "Starting legacy service account token cleaner controller" logger="legacy-serviceaccount-token-cleaner-controller"
I0522 15:29:50.932234       1 shared_informer.go:313] Waiting for caches to sync for legacy-service-account-token-cleaner
I0522 15:29:50.933197       1 controllermanager.go:765] "Started controller" controller="taint-eviction-controller"
I0522 15:29:50.933534       1 taint_eviction.go:281] "Starting" logger="taint-eviction-controller" controller="taint-eviction-controller"
I0522 15:29:50.933581       1 taint_eviction.go:287] "Sending events to api server" logger="taint-eviction-controller"
I0522 15:29:50.933614       1 shared_informer.go:313] Waiting for caches to sync for taint-eviction-controller
W0522 15:29:50.941063       1 shared_informer.go:597] resyncPeriod 15h55m1.157778781s is smaller than resyncCheckPeriod 18h15m54.814129162s and the informer has already started. Changing it to 18h15m54.814129162s
I0522 15:29:50.941114       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpoints"
I0522 15:29:50.941160       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="replicasets.apps"
I0522 15:29:50.941182       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workflows.argoproj.io"
I0522 15:29:50.941196       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="scheduledworkflows.kubeflow.org"
I0522 15:29:50.941234       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="jobs.batch"
I0522 15:29:50.941245       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workflowartifactgctasks.argoproj.io"
W0522 15:29:50.941248       1 shared_informer.go:597] resyncPeriod 15h48m23.372397766s is smaller than resyncCheckPeriod 18h15m54.814129162s and the informer has already started. Changing it to 18h15m54.814129162s
I0522 15:29:50.941275       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="serviceaccounts"
I0522 15:29:50.941286       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="podtemplates"
I0522 15:29:50.941293       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="applications.app.k8s.io"
I0522 15:29:50.941313       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workflowtemplates.argoproj.io"
I0522 15:29:50.941323       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workflowtasksets.argoproj.io"
I0522 15:29:50.941338       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="deployments.apps"
I0522 15:29:50.941671       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="ingresses.networking.k8s.io"
I0522 15:29:50.941685       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="controllerrevisions.apps"
I0522 15:29:50.941695       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="statefulsets.apps"
I0522 15:29:50.941708       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="networkpolicies.networking.k8s.io"
I0522 15:29:50.941723       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workfloweventbindings.argoproj.io"
I0522 15:29:50.941730       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="viewers.kubeflow.org"
I0522 15:29:50.941740       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="limitranges"
I0522 15:29:50.942029       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="roles.rbac.authorization.k8s.io"
I0522 15:29:50.942040       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="leases.coordination.k8s.io"
I0522 15:29:50.942055       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="endpointslices.discovery.k8s.io"
I0522 15:29:50.942064       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="workflowtaskresults.argoproj.io"
I0522 15:29:50.942088       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="horizontalpodautoscalers.autoscaling"
I0522 15:29:50.942103       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="cronjobs.batch"
I0522 15:29:50.942120       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="poddisruptionbudgets.policy"
I0522 15:29:50.942136       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="rolebindings.rbac.authorization.k8s.io"
I0522 15:29:50.942148       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="daemonsets.apps"
I0522 15:29:50.942156       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="csistoragecapacities.storage.k8s.io"
I0522 15:29:50.942167       1 resource_quota_monitor.go:227] "QuotaMonitor created object count evaluator" logger="resourcequota-controller" resource="cronworkflows.argoproj.io"
I0522 15:29:50.942181       1 controllermanager.go:765] "Started controller" controller="resourcequota-controller"
I0522 15:29:50.942228       1 resource_quota_controller.go:300] "Starting resource quota controller" logger="resourcequota-controller"
I0522 15:29:50.942233       1 shared_informer.go:313] Waiting for caches to sync for resource quota
I0522 15:29:50.942251       1 resource_quota_monitor.go:308] "QuotaMonitor running" logger="resourcequota-controller"
I0522 15:29:50.944279       1 controllermanager.go:765] "Started controller" controller="daemonset-controller"
I0522 15:29:50.944603       1 daemon_controller.go:294] "Starting daemon sets controller" logger="daemonset-controller"
I0522 15:29:50.944613       1 shared_informer.go:313] Waiting for caches to sync for daemon sets
I0522 15:29:50.947909       1 controllermanager.go:765] "Started controller" controller="horizontal-pod-autoscaler-controller"
I0522 15:29:50.947978       1 horizontal.go:201] "Starting HPA controller" logger="horizontal-pod-autoscaler-controller"
I0522 15:29:50.948081       1 shared_informer.go:313] Waiting for caches to sync for HPA
I0522 15:29:50.948600       1 controllermanager.go:765] "Started controller" controller="bootstrap-signer-controller"
I0522 15:29:50.948638       1 shared_informer.go:313] Waiting for caches to sync for bootstrap_signer
W0522 15:29:50.952180       1 type.go:183] The watchlist request for nodes ended with an error, falling back to the standard LIST semantics, err = nodes is forbidden: User "system:serviceaccount:kube-system:node-controller" cannot watch resource "nodes" in API group "" at the cluster scope
I0522 15:29:50.953118       1 range_allocator.go:112] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses" logger="node-ipam-controller"
I0522 15:29:50.953139       1 controllermanager.go:765] "Started controller" controller="node-ipam-controller"
I0522 15:29:50.953249       1 node_ipam_controller.go:141] "Starting ipam controller" logger="node-ipam-controller"
I0522 15:29:50.953259       1 shared_informer.go:313] Waiting for caches to sync for node
I0522 15:29:50.954420       1 controllermanager.go:765] "Started controller" controller="persistentvolume-attach-detach-controller"
I0522 15:29:50.954427       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="volumeattributesclass-protection-controller" requiredFeatureGates=["VolumeAttributesClass"]
I0522 15:29:50.954435       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="kube-apiserver-serving-clustertrustbundle-publisher-controller" requiredFeatureGates=["ClusterTrustBundle"]
I0522 15:29:50.954528       1 attach_detach_controller.go:338] "Starting attach detach controller" logger="persistentvolume-attach-detach-controller"
I0522 15:29:50.954535       1 shared_informer.go:313] Waiting for caches to sync for attach detach
I0522 15:29:50.955054       1 controllermanager.go:765] "Started controller" controller="endpointslice-mirroring-controller"
I0522 15:29:50.955122       1 endpointslicemirroring_controller.go:227] "Starting EndpointSliceMirroring controller" logger="endpointslice-mirroring-controller"
I0522 15:29:50.955127       1 shared_informer.go:313] Waiting for caches to sync for endpoint_slice_mirroring
I0522 15:29:50.955598       1 controllermanager.go:765] "Started controller" controller="pod-garbage-collector-controller"
I0522 15:29:50.955678       1 gc_controller.go:99] "Starting GC controller" logger="pod-garbage-collector-controller"
I0522 15:29:50.955686       1 shared_informer.go:313] Waiting for caches to sync for GC
I0522 15:29:50.956208       1 controllermanager.go:765] "Started controller" controller="endpoints-controller"
I0522 15:29:50.956281       1 endpoints_controller.go:182] "Starting endpoint controller" logger="endpoints-controller"
I0522 15:29:50.956289       1 shared_informer.go:313] Waiting for caches to sync for endpoint
I0522 15:29:50.956687       1 controllermanager.go:765] "Started controller" controller="serviceaccount-controller"
I0522 15:29:50.956730       1 serviceaccounts_controller.go:114] "Starting service account controller" logger="serviceaccount-controller"
I0522 15:29:50.956735       1 shared_informer.go:313] Waiting for caches to sync for service account
I0522 15:29:50.957186       1 controllermanager.go:765] "Started controller" controller="certificatesigningrequest-approving-controller"
I0522 15:29:50.957229       1 certificate_controller.go:120] "Starting certificate controller" logger="certificatesigningrequest-approving-controller" name="csrapproving"
I0522 15:29:50.957235       1 shared_informer.go:313] Waiting for caches to sync for certificate-csrapproving
I0522 15:29:50.957702       1 node_lifecycle_controller.go:432] "Controller will reconcile labels" logger="node-lifecycle-controller"
I0522 15:29:50.957716       1 controllermanager.go:765] "Started controller" controller="node-lifecycle-controller"
I0522 15:29:50.957718       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="node-route-controller"
I0522 15:29:50.957768       1 node_lifecycle_controller.go:466] "Sending events to api server" logger="node-lifecycle-controller"
I0522 15:29:50.957776       1 node_lifecycle_controller.go:477] "Starting node controller" logger="node-lifecycle-controller"
I0522 15:29:50.957777       1 shared_informer.go:313] Waiting for caches to sync for taint
I0522 15:29:50.958296       1 controllermanager.go:765] "Started controller" controller="endpointslice-controller"
I0522 15:29:50.958343       1 endpointslice_controller.go:281] "Starting endpoint slice controller" logger="endpointslice-controller"
I0522 15:29:50.958348       1 shared_informer.go:313] Waiting for caches to sync for endpoint_slice
I0522 15:29:50.958796       1 controllermanager.go:765] "Started controller" controller="cronjob-controller"
I0522 15:29:50.958880       1 cronjob_controllerv2.go:145] "Starting cronjob controller v2" logger="cronjob-controller"
I0522 15:29:50.958887       1 shared_informer.go:313] Waiting for caches to sync for cronjob
I0522 15:29:50.959330       1 controllermanager.go:765] "Started controller" controller="ttl-controller"
I0522 15:29:50.959383       1 ttl_controller.go:127] "Starting TTL controller" logger="ttl-controller"
I0522 15:29:50.959390       1 shared_informer.go:313] Waiting for caches to sync for TTL
I0522 15:29:50.959828       1 controllermanager.go:765] "Started controller" controller="ttl-after-finished-controller"
I0522 15:29:50.959882       1 ttlafterfinished_controller.go:112] "Starting TTL after finished controller" logger="ttl-after-finished-controller"
I0522 15:29:50.959888       1 shared_informer.go:313] Waiting for caches to sync for TTL after finished
I0522 15:29:50.969963       1 controllermanager.go:765] "Started controller" controller="root-ca-certificate-publisher-controller"
I0522 15:29:50.971228       1 publisher.go:107] "Starting root CA cert publisher controller" logger="root-ca-certificate-publisher-controller"
I0522 15:29:50.971238       1 shared_informer.go:313] Waiting for caches to sync for crt configmap
I0522 15:29:51.026733       1 shared_informer.go:320] Caches are synced for tokens
I0522 15:29:51.069368       1 controllermanager.go:765] "Started controller" controller="validatingadmissionpolicy-status-controller"
I0522 15:29:51.069408       1 shared_informer.go:313] Waiting for caches to sync for validatingadmissionpolicy-status
I0522 15:29:51.120796       1 controllermanager.go:765] "Started controller" controller="persistentvolume-expander-controller"
I0522 15:29:51.120825       1 expand_controller.go:329] "Starting expand controller" logger="persistentvolume-expander-controller"
I0522 15:29:51.120829       1 shared_informer.go:313] Waiting for caches to sync for expand
I0522 15:29:51.173475       1 controllermanager.go:765] "Started controller" controller="clusterrole-aggregation-controller"
I0522 15:29:51.175510       1 clusterroleaggregation_controller.go:194] "Starting ClusterRoleAggregator controller" logger="clusterrole-aggregation-controller"
I0522 15:29:51.175546       1 shared_informer.go:313] Waiting for caches to sync for ClusterRoleAggregator
I0522 15:29:51.227667       1 controllermanager.go:765] "Started controller" controller="persistentvolumeclaim-protection-controller"
I0522 15:29:51.227741       1 pvc_protection_controller.go:168] "Starting PVC protection controller" logger="persistentvolumeclaim-protection-controller"
I0522 15:29:51.227757       1 shared_informer.go:313] Waiting for caches to sync for PVC protection
I0522 15:29:51.280848       1 controllermanager.go:765] "Started controller" controller="deployment-controller"
I0522 15:29:51.280957       1 deployment_controller.go:173] "Starting controller" logger="deployment-controller" controller="deployment"
I0522 15:29:51.280974       1 shared_informer.go:313] Waiting for caches to sync for deployment
I0522 15:29:51.323615       1 controllermanager.go:765] "Started controller" controller="replicaset-controller"
I0522 15:29:51.323813       1 replica_set.go:217] "Starting controller" logger="replicaset-controller" name="replicaset"
I0522 15:29:51.323847       1 shared_informer.go:313] Waiting for caches to sync for ReplicaSet
I0522 15:29:51.379903       1 controllermanager.go:765] "Started controller" controller="statefulset-controller"
I0522 15:29:51.380362       1 stateful_set.go:166] "Starting stateful set controller" logger="statefulset-controller"
I0522 15:29:51.380385       1 shared_informer.go:313] Waiting for caches to sync for stateful set
I0522 15:29:51.423555       1 controllermanager.go:765] "Started controller" controller="token-cleaner-controller"
I0522 15:29:51.423711       1 tokencleaner.go:117] "Starting token cleaner controller" logger="token-cleaner-controller"
I0522 15:29:51.423742       1 shared_informer.go:313] Waiting for caches to sync for token_cleaner
I0522 15:29:51.423753       1 shared_informer.go:320] Caches are synced for token_cleaner
I0522 15:29:51.471384       1 controllermanager.go:765] "Started controller" controller="persistentvolume-protection-controller"
I0522 15:29:51.471415       1 pv_protection_controller.go:81] "Starting PV protection controller" logger="persistentvolume-protection-controller"
I0522 15:29:51.471423       1 shared_informer.go:313] Waiting for caches to sync for PV protection
I0522 15:29:51.521844       1 controllermanager.go:765] "Started controller" controller="replicationcontroller-controller"
I0522 15:29:51.521933       1 replica_set.go:217] "Starting controller" logger="replicationcontroller-controller" name="replicationcontroller"
I0522 15:29:51.521953       1 shared_informer.go:313] Waiting for caches to sync for ReplicationController
I0522 15:29:51.679261       1 controllermanager.go:765] "Started controller" controller="namespace-controller"
I0522 15:29:51.679310       1 namespace_controller.go:202] "Starting namespace controller" logger="namespace-controller"
I0522 15:29:51.679319       1 shared_informer.go:313] Waiting for caches to sync for namespace
I0522 15:29:51.721875       1 controllermanager.go:765] "Started controller" controller="job-controller"
I0522 15:29:51.721947       1 job_controller.go:243] "Starting job controller" logger="job-controller"
I0522 15:29:51.721960       1 shared_informer.go:313] Waiting for caches to sync for job
I0522 15:29:51.771840       1 controllermanager.go:765] "Started controller" controller="ephemeral-volume-controller"
I0522 15:29:51.771851       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="cloud-node-lifecycle-controller"
I0522 15:29:51.771855       1 controllermanager.go:717] "Controller is disabled by a feature gate" controller="service-cidr-controller" requiredFeatureGates=["MultiCIDRServiceAllocator"]
I0522 15:29:51.771875       1 controllermanager.go:743] "Warning: skipping controller" controller="storage-version-migrator-controller"
I0522 15:29:51.771894       1 controller.go:173] "Starting ephemeral volume controller" logger="ephemeral-volume-controller"
I0522 15:29:51.771902       1 shared_informer.go:313] Waiting for caches to sync for ephemeral
I0522 15:29:51.921847       1 controllermanager.go:765] "Started controller" controller="garbage-collector-controller"
I0522 15:29:51.922416       1 garbagecollector.go:144] "Starting controller" logger="garbage-collector-controller" controller="garbagecollector"
I0522 15:29:51.922528       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0522 15:29:51.922921       1 graph_builder.go:351] "Running" logger="garbage-collector-controller" component="GraphBuilder"
I0522 15:29:52.073935       1 controllermanager.go:765] "Started controller" controller="disruption-controller"
I0522 15:29:52.073963       1 controllermanager.go:723] "Skipping a cloud provider controller" controller="service-lb-controller"
I0522 15:29:52.075121       1 disruption.go:452] "Sending events to api server." logger="disruption-controller"
I0522 15:29:52.075190       1 disruption.go:463] "Starting disruption controller" logger="disruption-controller"
I0522 15:29:52.075202       1 shared_informer.go:313] Waiting for caches to sync for disruption
I0522 15:29:52.079272       1 shared_informer.go:313] Waiting for caches to sync for resource quota
I0522 15:29:52.095681       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"hawk-control-plane\" does not exist"
I0522 15:29:52.121041       1 shared_informer.go:320] Caches are synced for expand
I0522 15:29:52.122977       1 shared_informer.go:320] Caches are synced for job
I0522 15:29:52.123074       1 shared_informer.go:320] Caches are synced for ReplicationController
I0522 15:29:52.124183       1 shared_informer.go:320] Caches are synced for ReplicaSet
I0522 15:29:52.124796       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-viewer-crd-9fb599845" duration="590.916µs"
I0522 15:29:52.124829       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/cache-server-86856b8bb7" duration="565.708µs"
I0522 15:29:52.124806       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-envoy-deployment-78dc9bd89" duration="460.958µs"
I0522 15:29:52.124874       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-scheduledworkflow-8448967ff9" duration="27.625µs"
I0522 15:29:52.124884       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-writer-674865987c" duration="31.5µs"
I0522 15:29:52.124918       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-ui-5ccb464fcd" duration="22.167µs"
I0522 15:29:52.124929       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/minio-6d486b66cd" duration="43.958µs"
I0522 15:29:52.124942       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="14µs"
I0522 15:29:52.124965       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/cache-deployer-deployment-6647f5bd77" duration="17.083µs"
I0522 15:29:52.125047       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-persistenceagent-695db858d5" duration="21.291µs"
I0522 15:29:52.125116       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/mysql-6868b5b465" duration="60.417µs"
I0522 15:29:52.125141       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="13µs"
I0522 15:29:52.124809       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-visualizationserver-6fff5c98f7" duration="549µs"
I0522 15:29:52.128067       1 shared_informer.go:320] Caches are synced for PVC protection
I0522 15:29:52.128125       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-client
I0522 15:29:52.128067       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-serving
I0522 15:29:52.128721       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0522 15:29:52.128940       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-legacy-unknown
I0522 15:29:52.130589       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0522 15:29:52.135801       1 shared_informer.go:320] Caches are synced for taint-eviction-controller
I0522 15:29:52.135834       1 shared_informer.go:320] Caches are synced for legacy-service-account-token-cleaner
I0522 15:29:52.136153       1 shared_informer.go:320] Caches are synced for persistent volume
I0522 15:29:52.146275       1 shared_informer.go:320] Caches are synced for daemon sets
I0522 15:29:52.148576       1 shared_informer.go:320] Caches are synced for HPA
I0522 15:29:52.149265       1 shared_informer.go:320] Caches are synced for bootstrap_signer
I0522 15:29:52.153385       1 shared_informer.go:320] Caches are synced for node
I0522 15:29:52.153434       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0522 15:29:52.153497       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0522 15:29:52.153507       1 shared_informer.go:313] Waiting for caches to sync for cidrallocator
I0522 15:29:52.153527       1 shared_informer.go:320] Caches are synced for cidrallocator
I0522 15:29:52.153608       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:29:52.155044       1 shared_informer.go:320] Caches are synced for attach detach
I0522 15:29:52.156055       1 shared_informer.go:320] Caches are synced for GC
I0522 15:29:52.156080       1 shared_informer.go:320] Caches are synced for endpoint_slice_mirroring
I0522 15:29:52.157737       1 shared_informer.go:320] Caches are synced for certificate-csrapproving
I0522 15:29:52.157779       1 shared_informer.go:320] Caches are synced for service account
I0522 15:29:52.157796       1 shared_informer.go:320] Caches are synced for endpoint
I0522 15:29:52.158076       1 shared_informer.go:320] Caches are synced for taint
I0522 15:29:52.158096       1 node_lifecycle_controller.go:1234] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0522 15:29:52.158126       1 node_lifecycle_controller.go:886] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="hawk-control-plane"
I0522 15:29:52.158163       1 node_lifecycle_controller.go:1080] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0522 15:29:52.159105       1 shared_informer.go:320] Caches are synced for cronjob
I0522 15:29:52.159119       1 shared_informer.go:320] Caches are synced for endpoint_slice
I0522 15:29:52.159474       1 shared_informer.go:320] Caches are synced for TTL
I0522 15:29:52.161203       1 shared_informer.go:320] Caches are synced for TTL after finished
I0522 15:29:52.169822       1 shared_informer.go:320] Caches are synced for validatingadmissionpolicy-status
I0522 15:29:52.173135       1 shared_informer.go:320] Caches are synced for ephemeral
I0522 15:29:52.173162       1 shared_informer.go:320] Caches are synced for crt configmap
I0522 15:29:52.173164       1 shared_informer.go:320] Caches are synced for PV protection
I0522 15:29:52.175234       1 shared_informer.go:320] Caches are synced for disruption
I0522 15:29:52.177237       1 shared_informer.go:320] Caches are synced for ClusterRoleAggregator
I0522 15:29:52.179443       1 shared_informer.go:320] Caches are synced for namespace
I0522 15:29:52.181254       1 shared_informer.go:320] Caches are synced for deployment
I0522 15:29:52.181272       1 shared_informer.go:320] Caches are synced for stateful set
I0522 15:29:52.479249       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-grpc-deployment-6786fdf748" duration="354.407ms"
I0522 15:29:52.479344       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-grpc-deployment-6786fdf748" duration="50.375µs"
I0522 15:29:52.480341       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="355.401792ms"
I0522 15:29:52.480503       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-5c57dcf68f" duration="355.676209ms"
I0522 15:29:52.480726       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-5c57dcf68f" duration="17.542µs"
I0522 15:29:52.481010       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="28.625µs"
I0522 15:29:53.180183       1 shared_informer.go:320] Caches are synced for resource quota
I0522 15:29:53.222663       1 shared_informer.go:320] Caches are synced for garbage collector
I0522 15:29:53.222718       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0522 15:29:53.222732       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I0522 15:29:53.232078       1 shared_informer.go:320] Caches are synced for garbage collector
I0522 15:29:53.242454       1 shared_informer.go:320] Caches are synced for resource quota
I0522 15:30:05.827940       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="5.976083ms"
I0522 15:30:05.828127       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="108.667µs"
I0522 15:30:05.833485       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="3.792792ms"
I0522 15:30:05.833564       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="41.875µs"
I0522 15:30:06.681655       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="11.808709ms"
I0522 15:30:06.681855       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="18.458µs"
I0522 15:30:08.691844       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-5c57dcf68f" duration="99.125µs"
I0522 15:30:08.759185       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-5c57dcf68f" duration="8.687916ms"
I0522 15:30:08.759380       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/ml-pipeline-5c57dcf68f" duration="156.083µs"
I0522 15:30:12.536576       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="22.37375ms"
I0522 15:30:12.536627       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="19.208µs"
I0522 15:30:15.982099       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="37.375µs"
I0522 15:30:16.835807       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="5.468958ms"
I0522 15:30:16.835936       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/workflow-controller-8cc57744b" duration="26.584µs"
I0522 15:30:18.384779       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="31.541µs"
I0522 15:30:18.841635       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="2.496375ms"
I0522 15:30:18.841681       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-58cc7856b6" duration="27.708µs"
I0522 15:30:19.849239       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-grpc-deployment-6786fdf748" duration="93.166µs"
I0522 15:30:21.864659       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-grpc-deployment-6786fdf748" duration="3.180708ms"
I0522 15:30:21.865109       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kubeflow/metadata-grpc-deployment-6786fdf748" duration="18.5µs"
I0522 15:32:45.239126       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:37:52.672826       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:42:58.477176       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:48:05.537851       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:53:11.208308       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 15:58:18.101542       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 16:03:24.851896       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 16:28:10.106377       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 16:32:41.240266       1 garbagecollector.go:789] "failed to discover preferred resources" logger="garbage-collector-controller" error="the server has asked for the client to provide credentials"
E0522 16:32:41.827027       1 resource_quota_controller.go:446] "Unhandled Error" err="failed to discover resources: the server has asked for the client to provide credentials" logger="UnhandledError"
I0522 16:36:22.294224       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 16:41:29.639114       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:12:23.614322       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:17:29.496830       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:22:35.224518       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:27:41.161388       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:32:47.666884       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:34:30.256133       1 garbagecollector.go:789] "failed to discover preferred resources" logger="garbage-collector-controller" error="the server has asked for the client to provide credentials"
E0522 17:34:30.674864       1 resource_quota_controller.go:446] "Unhandled Error" err="failed to discover resources: the server has asked for the client to provide credentials" logger="UnhandledError"
I0522 17:37:53.946834       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:42:59.538316       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:48:05.972785       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
I0522 17:53:11.924016       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="hawk-control-plane"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-hawk-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-xxjt7 ====
I0522 15:29:35.822665       1 server.go:698] "Successfully retrieved node IP(s)" IPs=["172.18.0.2"]
I0522 15:29:35.822809       1 conntrack.go:121] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_established" value=86400
I0522 15:29:35.822835       1 conntrack.go:121] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
E0522 15:29:35.822861       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0522 15:29:35.899594       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0522 15:29:35.899631       1 server_linux.go:170] "Using iptables Proxier"
I0522 15:29:35.903633       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0522 15:29:35.904311       1 server.go:497] "Version info" version="v1.32.0"
I0522 15:29:35.904332       1 server.go:499] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0522 15:29:35.910836       1 config.go:199] "Starting service config controller"
I0522 15:29:35.911100       1 config.go:105] "Starting endpoint slice config controller"
I0522 15:29:35.917613       1 config.go:329] "Starting node config controller"
I0522 15:29:35.920497       1 shared_informer.go:313] Waiting for caches to sync for service config
I0522 15:29:35.920554       1 shared_informer.go:313] Waiting for caches to sync for node config
I0522 15:29:35.920689       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0522 15:29:36.021070       1 shared_informer.go:320] Caches are synced for node config
I0522 15:29:36.021123       1 shared_informer.go:320] Caches are synced for service config
I0522 15:29:36.021140       1 shared_informer.go:320] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-xxjt7 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-hawk-control-plane ====
I0522 15:29:29.673206       1 serving.go:386] Generated self-signed cert in-memory
I0522 15:29:31.279446       1 server.go:166] "Starting Kubernetes Scheduler" version="v1.32.0"
I0522 15:29:31.279458       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0522 15:29:31.281312       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0522 15:29:31.281661       1 requestheader_controller.go:180] Starting RequestHeaderAuthRequestController
I0522 15:29:31.282690       1 shared_informer.go:313] Waiting for caches to sync for RequestHeaderAuthRequestController
I0522 15:29:31.282718       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0522 15:29:31.282722       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0522 15:29:31.282727       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I0522 15:29:31.282729       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I0522 15:29:31.284437       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
I0522 15:29:31.386064       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I0522 15:29:31.386228       1 leaderelection.go:257] attempting to acquire leader lease kube-system/kube-scheduler...
I0522 15:29:31.388273       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0522 15:29:31.388711       1 shared_informer.go:320] Caches are synced for RequestHeaderAuthRequestController
I0522 15:29:31.396421       1 leaderelection.go:271] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-hawk-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "a330db3b-670c-4f2d-bf7e-e3af4ac2e117",
                "resourceVersion": "195",
                "creationTimestamp": "2024-12-21T05:13:27Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "2096596"
    },
    "items": []
}
